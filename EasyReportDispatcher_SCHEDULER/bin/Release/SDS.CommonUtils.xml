<?xml version="1.0"?>
<doc>
<assembly>
<name>
SDS.CommonUtils
</name>
</assembly>
<members>
<member name="T:SDS.CommonUtils.My.Resources.MsgBanca">
<summary>
  Classe di risorse fortemente tipizzata per la ricerca di stringhe localizzate e così via.
</summary>
</member>
<member name="P:SDS.CommonUtils.My.Resources.MsgBanca.ResourceManager">
<summary>
  Restituisce l'istanza di ResourceManager nella cache utilizzata da questa classe.
</summary>
</member>
<member name="P:SDS.CommonUtils.My.Resources.MsgBanca.Culture">
<summary>
  Esegue l'override della proprietà CurrentUICulture del thread corrente per tutte le
  ricerche di risorse eseguite utilizzando questa classe di risorse fortemente tipizzata.
</summary>
</member>
<member name="P:SDS.CommonUtils.My.Resources.MsgBanca.Iban_CheckDigitNonValido">
<summary>
  Cerca una stringa localizzata simile a Il check digit dell&apos;IBAN fornito (&apos;{0}&apos;) risulta non valido.
</summary>
</member>
<member name="P:SDS.CommonUtils.My.Resources.MsgBanca.Iban_CodiceBancaErrato">
<summary>
  Cerca una stringa localizzata simile a Il codice della banca (ABI) fornito (&apos;{0}&apos;) risulta di lunghezza differente rispetto a quella attesa ({1}).
</summary>
</member>
<member name="P:SDS.CommonUtils.My.Resources.MsgBanca.Iban_CodiceControlloErrato">
<summary>
  Cerca una stringa localizzata simile a Il codice di controllo (CIN) fornito (&apos;{0}&apos;) risulta di lunghezza differente rispetto a quella attesa ({1}).
</summary>
</member>
<member name="P:SDS.CommonUtils.My.Resources.MsgBanca.Iban_CodiceControlloNonValido">
<summary>
  Cerca una stringa localizzata simile a Il codice di controllo (CIN) fornito (&apos;{0}&apos;) risulta differente da quello atteso ({1}).
</summary>
</member>
<member name="P:SDS.CommonUtils.My.Resources.MsgBanca.Iban_CodiceSportelloErrato">
<summary>
  Cerca una stringa localizzata simile a Il codice dello sportello (CAB) fornito (&apos;{0}&apos;) risulta di lunghezza differente rispetto a quella attesa ({1}).
</summary>
</member>
<member name="P:SDS.CommonUtils.My.Resources.MsgBanca.Iban_IbanErrato">
<summary>
  Cerca una stringa localizzata simile a Il codice IBAN fornito (&apos;{0}&apos;) risulta di lunghezza differente rispetto a quella attesa ({1}).
</summary>
</member>
<member name="P:SDS.CommonUtils.My.Resources.MsgBanca.Iban_NumeroContoErrato">
<summary>
  Cerca una stringa localizzata simile a Il numero di conto fornito (&apos;{0}&apos;) risulta di lunghezza differente rispetto a quella attesa ({1}).
</summary>
</member>
<member name="T:SDS.CommonUtils.My.Resources.Resources">
<summary>
  Classe di risorse fortemente tipizzata per la ricerca di stringhe localizzate e così via.
</summary>
</member>
<member name="P:SDS.CommonUtils.My.Resources.Resources.ResourceManager">
<summary>
  Restituisce l'istanza di ResourceManager nella cache utilizzata da questa classe.
</summary>
</member>
<member name="P:SDS.CommonUtils.My.Resources.Resources.Culture">
<summary>
  Esegue l'override della proprietà CurrentUICulture del thread corrente per tutte le
  ricerche di risorse eseguite utilizzando questa classe di risorse fortemente tipizzata.
</summary>
</member>
<member name="T:SDS.CommonUtils.AdoContainer">
 <summary>
 Oggetto  per utilizzo del contesto database in ambiente multi-database ADO (connection. transansaction ...!)
 </summary>
 <remarks></remarks>
</member>
<member name="P:SDS.CommonUtils.AdoContainer.Connection">
 <summary>
 Connessione Db (Sempre valorizzata)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SDS.CommonUtils.AdoContainer.Transaction">
 <summary>
 Transazione può essere NOTHING
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.AdoContainer.#ctor(System.Data.Common.DbConnection,System.Data.Common.DbTransaction)">
 <summary>
 Crea contenitore con informazioni. La connessione è obbligatoria
 </summary>
 <param name="ConnectionIn"></param>
 <param name="TransactionIn"></param>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.AdoContainer.CloneConnection">
 <summary>
 Ritorna nuova connessione chiusa Clone dell'originale (completamente diversa dalla precedente)
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.AdoContainer.CreateCommand">
 <summary>
 Crea DbCommand con eventuale transazione già impostata
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.AdoContainer.OpenConn">
 <summary>
 Apre la connessione se non già aperta
 </summary>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.AdoContainer.CloseConn(System.Boolean,System.Boolean)">
 <summary>
 Chiude la connessione se aperta
 </summary>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.AdoContainer.AddParam(System.Data.Common.DbCommand,System.String,System.Object)">
 <summary>
 Aggiunge parametro a cmd esistente. Attenzione se il valore fornito è NULL il sistema non può sapere a priori la corretta mappatura
 In tal caso utilizzare la versione con specifica del parametro.
 </summary>
 <param name="cmd"></param>
 <param name="paramName"></param>
 <param name="paramValue"></param>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.AdoContainer.AddParam(System.Data.Common.DbCommand,System.String,System.Object,System.Data.DbType)">
 <summary>
 Aggiunge parametro a cmd esistente con specifica di tipo NULL
 </summary>
 <param name="cmd"></param>
 <param name="paramName"></param>
 <param name="paramValue"></param>
 <param name="dbValueType"></param>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.AdoContainer.GetLastIdentity">
 <summary>
 Ritorna ultimo identity inserito
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:SDS.CommonUtils.Arch.FileSystem.FileSystemHFS">
 <summary>
 Classe Wrapper per la gestione di file remoti
 su Http File Server
 </summary>
</member>
<member name="T:SDS.CommonUtils.Arch.FileSystem.FileSystemHFS.FS">
 <summary>
 Costanti
 </summary>
</member>
<member name="T:SDS.CommonUtils.Arch.FileSystem.FileSystemHFS.ParamList">
 <summary>
 Elenco parametri per chiamate http
 </summary>
</member>
<member name="P:SDS.CommonUtils.Arch.FileSystem.FileSystemHFS.LastRespCode">
 <summary>
 Ultimo Codice Risposta
 </summary>
</member>
<member name="P:SDS.CommonUtils.Arch.FileSystem.FileSystemHFS.LastRespMsg">
 <summary>
 Ultimo Messaggio Risposta
 </summary>
</member>
<member name="P:SDS.CommonUtils.Arch.FileSystem.FileSystemHFS.CurrentDirectory">
 <summary>
 Directory corrente
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.Arch.FileSystem.FileSystemHFS.#ctor(System.String,System.String,System.String)">
 <summary>
 Costruttore con specifica di credenziali
 </summary>
 <param name="url"></param>
 <param name="user"></param>
 <param name="pass"></param>
</member>
<member name="M:SDS.CommonUtils.Arch.FileSystem.FileSystemHFS.FileExist(System.String)">
 <summary>
 Controlla esistenza file remoto
 </summary>
 <param name="vpath"></param>
 <returns></returns>
</member>
<member name="M:SDS.CommonUtils.Arch.FileSystem.FileSystemHFS.FileGetInfo(System.String)">
 <summary>
 Ritorna informazioni su file remoto
 </summary>
 <param name="vpath"></param>
 <returns></returns>
</member>
<member name="M:SDS.CommonUtils.Arch.FileSystem.FileSystemHFS.FileGetImageInfo(System.String)">
 <summary>
 Ritorna informazioni su file Immagine remoto
 </summary>
 <param name="vpath"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.Arch.FileSystem.FileSystemHFS.FileDelete(System.String)">
 <summary>
 Elimina file remoto
 </summary>
 <param name="vpath"></param>
</member>
<member name="M:SDS.CommonUtils.Arch.FileSystem.FileSystemHFS.FileEmail(System.String,System.String,System.String,System.String,System.String)">
 <summary>
 Invia file remoto per email
 </summary>
 <param name="vpath"></param>
</member>
<member name="M:SDS.CommonUtils.Arch.FileSystem.FileSystemHFS.FileReadToBuffer(System.String,System.String)">
 <summary>
 Elimina file remoto
 </summary>
 <param name="vpath"></param>
 <param name="attr"></param>
 <returns></returns>
</member>
<member name="M:SDS.CommonUtils.Arch.FileSystem.FileSystemHFS.FileReadToBuffer(System.String)">
 <summary>
 legge file remoto
 </summary>
 <param name="vpath"></param>
</member>
<member name="M:SDS.CommonUtils.Arch.FileSystem.FileSystemHFS.FileReadToDisk(System.String,System.String)">
 <summary>
 legge file remoto
 </summary>
 <param name="vpath"></param>
</member>
<member name="M:SDS.CommonUtils.Arch.FileSystem.FileSystemHFS.FileReadToStream(System.String,System.IO.Stream)">
 <summary>
 Legge file su stream fornito in input
 </summary>
 <param name="vpath"></param>
 <param name="stream"></param>
</member>
<member name="M:SDS.CommonUtils.Arch.FileSystem.FileSystemHFS.FileWriteFromBuffer(System.String,System.Byte[])">
 <summary>
 Scrive file con dati da buffer
 </summary>
 <param name="vpath"></param>
 <param name="buffer"></param>
</member>
<member name="M:SDS.CommonUtils.Arch.FileSystem.FileSystemHFS.FileWriteFromDisk(System.String,System.String)">
 <summary>
 Scrive file partendo da file fisico
 </summary>
 <param name="vpath"></param>
 <param name="localFile"></param>
</member>
<member name="M:SDS.CommonUtils.Arch.FileSystem.FileSystemHFS.FileWriteFromStream(System.String,System.IO.Stream)">
 <summary>
 Scrive file a partire da uno stream
 </summary>
 <param name="vpath"></param>
 <param name="stream">
 stream con posibilità di read e seek
 </param>
</member>
<member name="M:SDS.CommonUtils.Arch.FileSystem.FileSystemHFS.FileAppendFromBuffer(System.String,System.Byte[])">
 <summary>
 Append file con dati da buffer
 </summary>
 <param name="vpath"></param>
 <param name="buffer"></param>
</member>
<member name="M:SDS.CommonUtils.Arch.FileSystem.FileSystemHFS.FileCopy(System.String,System.String)">
 <summary>
 Copia file remoto su altro remoto
 </summary>
 <param name="vpath"></param>
</member>
<member name="M:SDS.CommonUtils.Arch.FileSystem.FileSystemHFS.FileMove(System.String,System.String)">
 <summary>
 Sposta file remoto su altro remoto
 </summary>
 <param name="vpath"></param>
</member>
<member name="M:SDS.CommonUtils.Arch.FileSystem.FileSystemHFS.FileTouch(System.String)">
 <summary>
 Crea o azzera file
 </summary>
 <param name="vpath"></param>
</member>
<member name="M:SDS.CommonUtils.Arch.FileSystem.FileSystemHFS.ListRootEntries">
 <summary>
 Elenca ROOT directory a cui l'utente ha accessoe
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.Arch.FileSystem.FileSystemHFS.FileHashSHA1(System.String)">
 <summary>
 Calcola Hash SHA1 di un file remoto
 </summary>
 <param name="vpath"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.Arch.FileSystem.FileSystemHFS.FileLocalHashSHA1(System.String)">
 <summary>
 Calcola Hash SHA1 di un file locale
 </summary>
 <param name="localfile"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.Arch.FileSystem.FileSystemHFS.SendParamRequest(System.String[])">
 <summary>
 Esegue una richiesta HFS con parametri liberi
 </summary>
 <param name="args"></param>
 <returns></returns>
</member>
<member name="M:SDS.CommonUtils.Arch.FileSystem.FileSystemHFS.DirectoryCreate(System.String)">
 <summary>
 Crea directory
 </summary>
 <param name="vpath"></param>
</member>
<member name="M:SDS.CommonUtils.Arch.FileSystem.FileSystemHFS.DirectoryDelete(System.String)">
 <summary>
 Elimina directory e tutto il suo contenuto
 </summary>
 <param name="vpath"></param>
</member>
<member name="M:SDS.CommonUtils.Arch.FileSystem.FileSystemHFS.DirectoryMove(System.String,System.String)">
 <summary>
 Sposta/Rinomina Directory
 </summary>
 <param name="vpath"></param>
 <param name="vpathdest"></param>
</member>
<member name="M:SDS.CommonUtils.Arch.FileSystem.FileSystemHFS.DirectoryCopy(System.String,System.String)">
 <summary>
 Copia Directory su altra
 </summary>
 <param name="vpath"></param>
 <param name="vpathdest"></param>
</member>
<member name="M:SDS.CommonUtils.Arch.FileSystem.FileSystemHFS.DirectoryQuota(System.String)">
 <summary>
 Ritorna la dimensione del contenuto di una directory e di tutte le sue sottodirectory
 </summary>
 <param name="vpath"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.Arch.FileSystem.FileSystemHFS.DirectoryListFilesFilter(System.String,System.String,System.Boolean)">
 <summary>
 Elenca files presenti in directory remota
 </summary>
 <param name="vpath"></param>
</member>
<member name="M:SDS.CommonUtils.Arch.FileSystem.FileSystemHFS.DirectoryListSubDirFilter(System.String,System.String,System.Boolean)">
 <summary>
 Elenca files presenti in directory remota
 </summary>
 <param name="vpath"></param>
</member>
<member name="M:SDS.CommonUtils.Arch.FileSystem.FileSystemHFS.ReloadVFS">
 <summary>
 Ricarica database VFS (Virtual File System)
 </summary>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.Arch.FileSystem.FileSystemHFS.RestartServer">
 <summary>
 Riavvia applicativo server
 </summary>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.Arch.FileSystem.FileSystemHFS.sendRequest(SDS.CommonUtils.Arch.FileSystem.FileSystemHFS.ParamList)">
 <summary>
 Invia richiesta
 </summary>
 <param name="param"></param>
 <returns></returns>
</member>
<member name="M:SDS.CommonUtils.Arch.FileSystem.FileSystemHFS.sendRequest(SDS.CommonUtils.Arch.FileSystem.FileSystemHFS.ParamList,System.Byte[],System.Int32,System.Int32)">
 <summary>
 Invia richiesta con elenco parametri e buffer
 </summary>
 <param name="param"></param>
 <param name="buffer"></param>
 <returns></returns>
</member>
<member name="M:SDS.CommonUtils.Arch.FileSystem.FileSystemHFS.sendRequestQS(SDS.CommonUtils.Arch.FileSystem.FileSystemHFS.ParamList,System.Byte[],System.Int32,System.Int32)">
 <summary>
 Invia richiesta con elenco parametri e buffer
 </summary>
 <param name="param"></param>
 <param name="buffer"></param>
 <returns></returns>
</member>
<member name="M:SDS.CommonUtils.Arch.FileSystem.FileSystemHFS.getFullVPath(System.String)">
 <summary>
 Ritorna path unificato con Current Directory
 </summary>
 <param name="vpath"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.Arch.FileSystem.FileSystemHFS.setResponse(System.Int32,System.String)">
 <summary>
 Imposta dati risposta
 </summary>
 <param name="code"></param>
 <param name="msg"></param>
</member>
<member name="M:SDS.CommonUtils.Arch.FileSystem.FileSystemHFS.checkResponse(System.Net.WebClient)">
 <summary>
 Controlla esito chiamata
 </summary>
</member>
<member name="M:SDS.CommonUtils.Arch.FileSystem.FileSystemHFS.checkInputFile(System.String,System.Boolean)">
 <summary>
 Controllo file locale
 </summary>
 <param name="localFile"></param>
 <param name="checkExist"></param>
</member>
<member name="M:SDS.CommonUtils.Arch.FileSystem.FileSystemHFS.checkBuffer(System.Byte[])">
 <summary>
 Controllo buffer
 </summary>
 <param name="buffer"></param>
</member>
<member name="M:SDS.CommonUtils.Arch.FileSystem.FileSystemHFS.checkStream(System.IO.Stream,System.Boolean,System.Boolean,System.Boolean)">
 <summary>
 Controlla stream
 </summary>
 <param name="stream"></param>
</member>
<member name="M:SDS.CommonUtils.Arch.FileSystem.FileSystemHFS.getFileInfoFromRow(System.Data.DataRow)">
 <summary>
 Carica FileInfo da datarow
 </summary>
 <param name="row"></param>
 <returns></returns>
</member>
<member name="M:SDS.CommonUtils.Arch.FileSystem.FileSystemHFS.getDirInfoFromRow(System.Data.DataRow)">
 <summary>
 Carica FSDirInfo da datarow
 </summary>
 <param name="row"></param>
 <returns></returns>
</member>
<member name="T:SDS.CommonUtils.Arch.FileSystem.FSFileInfo">
 <summary>
 Classe contenente informazioni su file remoto
 </summary>
</member>
<member name="T:SDS.CommonUtils.Arch.FileSystem.FSDirInfo">
 <summary>
 Classe contenente info su directory remota
 </summary>
</member>
<member name="T:SDS.CommonUtils.Arch.FileSystem.FileSystemBase">
 <summary>
 Classe base
 </summary>
 <remarks></remarks>
</member>
<member name="P:SDS.CommonUtils.Arch.FileSystem.FileSystemBase.TimeoutMSec">
 <summary>
 Eventuale timeout per le operazioni (default 10 Minuti)
 </summary>
 <returns></returns>
</member>
<member name="P:SDS.CommonUtils.Arch.FileSystem.FileSystemBase.Url">
 <summary>
 Uri contenente tutte le informazioni di configurazione del file system
 (host, porta, user, pass, parametri in querystring)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:SDS.CommonUtils.Arch.FileSystem.FileSystemFactory">
 <summary>
 Classe per la creazione di oggetti file system
 </summary>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.Arch.FileSystem.FileSystemFactory.GetFileSystem(System.String)">
 <summary>
 Ritorna un oggetto IFileSystem appropriato alla string a in formato URI
 passata esempio (http://user:pass@server:port/path/file.ext)
 </summary>
 <param name="uristring">
 </param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.Arch.FileSystem.FileSystemFactory.createHFS(System.Uri)">
 <summary>
 Crea una istanza di file system HFS
 </summary>
 <param name="uri"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SDS.CommonUtils.Arch.FileSystem.IFileSystem.TimeoutMSec">
 <summary>
 Eventuale timeout per le operazioni
 </summary>
 <returns></returns>
</member>
<member name="P:SDS.CommonUtils.Arch.FileSystem.IFileSystem.Url">
 <summary>
 Url Server
 </summary>
</member>
<member name="P:SDS.CommonUtils.Arch.FileSystem.IFileSystem.User">
 <summary>
 User name
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SDS.CommonUtils.Arch.FileSystem.IFileSystem.LastRespCode">
 <summary>
 Ultimo Codice Risposta
 </summary>
</member>
<member name="P:SDS.CommonUtils.Arch.FileSystem.IFileSystem.LastRespMsg">
 <summary>
 Ultimo Messaggio Risposta
 </summary>
</member>
<member name="P:SDS.CommonUtils.Arch.FileSystem.IFileSystem.CurrentDirectory">
 <summary>
 Directory corrente da cui partire per i comandi
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.Arch.FileSystem.IFileSystem.FileExist(System.String)">
 <summary>
 Controlla esistenza file remoto
 </summary>
 <param name="vpath"></param>
 <returns></returns>
</member>
<member name="M:SDS.CommonUtils.Arch.FileSystem.IFileSystem.FileGetImageInfo(System.String)">
 <summary>
 Ritorna informazioni su file Immagine remoto
 </summary>
 <param name="vpath"></param>
 <returns></returns>
</member>
<member name="M:SDS.CommonUtils.Arch.FileSystem.IFileSystem.FileGetInfo(System.String)">
 <summary>
 Ritorna informazioni su file remoto
 </summary>
 <param name="vpath"></param>
 <returns></returns>
</member>
<member name="M:SDS.CommonUtils.Arch.FileSystem.IFileSystem.FileDelete(System.String)">
 <summary>
 Elimina file remoto
 </summary>
 <param name="vpath"></param>
</member>
<member name="M:SDS.CommonUtils.Arch.FileSystem.IFileSystem.FileEmail(System.String,System.String,System.String,System.String,System.String)">
 <summary>
 Invia file remoto per email
 </summary>
 <param name="vpath"></param>
</member>
<member name="M:SDS.CommonUtils.Arch.FileSystem.IFileSystem.FileReadToBuffer(System.String)">
 <summary>
 legge file remoto
 </summary>
 <param name="vpath"></param>
</member>
<member name="M:SDS.CommonUtils.Arch.FileSystem.IFileSystem.FileReadToBuffer(System.String,System.String)">
 <summary>
 legge file remoto
 </summary>
 <param name="vpath"></param>
 <param name="attr"></param>
 <returns></returns>
</member>
<member name="M:SDS.CommonUtils.Arch.FileSystem.IFileSystem.FileReadToDisk(System.String,System.String)">
 <summary>
 legge file remoto
 </summary>
 <param name="vpath"></param>
</member>
<member name="M:SDS.CommonUtils.Arch.FileSystem.IFileSystem.FileReadToStream(System.String,System.IO.Stream)">
 <summary>
 Legge file su stream fornito in input
 </summary>
 <param name="vpath"></param>
 <param name="stream"></param>
</member>
<member name="M:SDS.CommonUtils.Arch.FileSystem.IFileSystem.FileWriteFromBuffer(System.String,System.Byte[])">
 <summary>
 Scrive file con dati da buffer
 </summary>
 <param name="vpath"></param>
 <param name="buffer"></param>
</member>
<member name="M:SDS.CommonUtils.Arch.FileSystem.IFileSystem.FileWriteFromDisk(System.String,System.String)">
 <summary>
 Scrive file partendo da file fisico
 </summary>
 <param name="vpath"></param>
 <param name="localFile"></param>
</member>
<member name="M:SDS.CommonUtils.Arch.FileSystem.IFileSystem.FileWriteFromStream(System.String,System.IO.Stream)">
 <summary>
 Scrive file a partire da uno stream
 </summary>
 <param name="vpath"></param>
 <param name="stream">
 stream con posibilità di read e seek
 </param>
</member>
<member name="M:SDS.CommonUtils.Arch.FileSystem.IFileSystem.FileAppendFromBuffer(System.String,System.Byte[])">
 <summary>
 Append file con dati da buffer
 </summary>
 <param name="vpath"></param>
 <param name="buffer"></param>
</member>
<member name="M:SDS.CommonUtils.Arch.FileSystem.IFileSystem.FileCopy(System.String,System.String)">
 <summary>
 Copia file remoto su altro remoto
 </summary>
 <param name="vpath"></param>
</member>
<member name="M:SDS.CommonUtils.Arch.FileSystem.IFileSystem.FileMove(System.String,System.String)">
 <summary>
 Sposta file remoto su altro remoto
 </summary>
 <param name="vpath"></param>
</member>
<member name="M:SDS.CommonUtils.Arch.FileSystem.IFileSystem.FileHashSHA1(System.String)">
 <summary>
 Calcola l'hash SHA1 di un file remoto (da server)
 </summary>
 <param name="vpath"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.Arch.FileSystem.IFileSystem.FileLocalHashSHA1(System.String)">
 <summary>
 Calcola l'hash SHA1 di un file locale (client)
 </summary>
 <param name="localfile"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.Arch.FileSystem.IFileSystem.FileTouch(System.String)">
 <summary>
 Crea o azzera file
 </summary>
 <param name="vpath"></param>
</member>
<member name="M:SDS.CommonUtils.Arch.FileSystem.IFileSystem.DirectoryCreate(System.String)">
 <summary>
 Crea directory
 </summary>
 <param name="vpath"></param>
</member>
<member name="M:SDS.CommonUtils.Arch.FileSystem.IFileSystem.DirectoryDelete(System.String)">
 <summary>
 Elimina directory e tutto il suo contenuto
 </summary>
 <param name="vpath"></param>
</member>
<member name="M:SDS.CommonUtils.Arch.FileSystem.IFileSystem.DirectoryMove(System.String,System.String)">
 <summary>
 Sposta/Rinomina Directory
 </summary>
 <param name="vpath"></param>
 <param name="vpathdest"></param>
</member>
<member name="M:SDS.CommonUtils.Arch.FileSystem.IFileSystem.DirectoryCopy(System.String,System.String)">
 <summary>
 Copia Directory su altra
 </summary>
 <param name="vpath"></param>
 <param name="vpathdest"></param>
</member>
<member name="M:SDS.CommonUtils.Arch.FileSystem.IFileSystem.DirectoryListFilesFilter(System.String,System.String,System.Boolean)">
 <summary>
 Elenca files presenti in directory remota con pattern
 </summary>
 <param name="vpath"></param>
</member>
<member name="M:SDS.CommonUtils.Arch.FileSystem.IFileSystem.DirectoryListFiles(System.String)">
 <summary>
 Elenca files presenti in directory remota
 </summary>
</member>
<member name="M:SDS.CommonUtils.Arch.FileSystem.IFileSystem.DirectoryListSubDirFilter(System.String,System.String,System.Boolean)">
 <summary>
 Elenca files presenti in directory remota con pattern
 </summary>
 <param name="vpath"></param>
</member>
<member name="M:SDS.CommonUtils.Arch.FileSystem.IFileSystem.DirectoryListSubDir(System.String)">
 <summary>
 Elenca files presenti in directory remota 
 </summary>
 <param name="vpath"></param>
</member>
<member name="M:SDS.CommonUtils.Arch.FileSystem.IFileSystem.DirectoryExist(System.String)">
 <summary>
 Verifica esistenza directory
 </summary>
 <param name="vpath"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.Arch.FileSystem.IFileSystem.ListRootEntries">
 <summary>
 Ritorna elenco di directory ROOT
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:SDS.CommonUtils.Arch.FileSystem.FSPermissionHFS">
 <summary>
 Classe contenente permessi HFS
 </summary>
</member>
<member name="T:SDS.CommonUtils.Arch.FileSystem.IFSPermission">
 <summary>
 Interfaccia di definizione permessi di una entry file system
 </summary>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.Arch.FileSystem.MimeHelper.GetMimeFromFilename(System.String)">
 <summary>
 Ritorna mime type da nome di file
 </summary>
 <param name="file"></param>
 <returns></returns>
</member>
<member name="M:SDS.CommonUtils.Arch.FileSystem.MimeHelper.GetMimeFromExtension(System.String)">
 <summary>
 Ritorna mime da estensione
 </summary>
 <param name="ext"></param>
 <returns></returns>
</member>
<member name="T:SDS.CommonUtils.ProtocolloDTO">
 <summary>
 Classe che espone le proprieta' base del protocollo
 </summary>
 <remarks></remarks>
</member>
<member name="T:SDS.CommonUtils.ProtocolloManager">
 <summary>
 Classe per l'accesso generico al protocollo
 </summary>
 <remarks></remarks>
</member>
<member name="P:SDS.CommonUtils.ProtocolloManager.UsaNumerazioneSequenza">
 <summary>
 Indica se utilizzare il generatore sicuro di progressivi oppure
 la vecchia modalita' MAX+1 (DEFAULT FALSE: vecchia modalità)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SDS.CommonUtils.ProtocolloManager.RegistraEventi">
 <summary>
 Indica se attivare la registrazione degli eventi di protocallazione
 Default: disabilitata
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.ProtocolloManager.GetByID(System.Int64)">
 <summary>
 Ritorna dati protocollo da ID
 </summary>
 <param name="id"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.ProtocolloManager.GetByNumero(System.String)">
 <summary>
 Ritorna Dati protocollo da NUMERO
 </summary>
 <param name="numProtoIn"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.ProtocolloManager.Inserisci(System.Int32,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTime,System.DateTime,System.DateTime,System.String,System.Int32)">
 <summary>
 Inserisce nuovo protocollo
 </summary>
 <param name="codDirezioneIn"></param>
 <param name="codMittenteIn"></param>
 <param name="codEntMittenteIn"></param>
 <param name="codDestinatarioIn"></param>
 <param name="codEntDestinatarioIn"></param>
 <param name="codOggettoIn"></param>
 <param name="codTipoProtocolloIn"></param>
 <param name="codTipoAllegatoIn"></param>
 <param name="codPercorsoFileIn"></param>
 <param name="dataDocumentoIn"></param>
 <param name="dataProtocolloIn"></param>
 <param name="dataAcquisizioneIn"></param>
 <param name="noteIn"></param>
 <param name="numPagDocIn"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.ProtocolloManager.Aggiorna(System.Int64,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTime,System.DateTime,System.String,System.Int32)">
 <summary>
 Aggiorna i dati di un protocollo
 </summary>
 <param name="idProtocolloIn"></param>
 <param name="codMittenteIn"></param>
 <param name="codEntMittenteIn"></param>
 <param name="codDestinatarioIn"></param>
 <param name="codEntDestinatarioIn"></param>
 <param name="codOggettoIn"></param>
 <param name="codTipoProtocolloIn"></param>
 <param name="codTipoAllegatoIn"></param>
 <param name="codPercorsoFileIn"></param>
 <param name="dataDocumentoIn"></param>
 <param name="dataAcquisizioneIn"></param>
 <param name="noteIn"></param>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.ProtocolloManager.Elimina(System.Int64)">
 <summary>
 Elimina un protocollo
 </summary>
 <param name="id"></param>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.ProtocolloManager.CaricaFile(SDS.CommonUtils.ProtocolloDTO,System.String,System.Boolean)">
 <summary>
 Carica file protocollo
 </summary>
 <param name="proto"></param>
 <param name="filePath"></param>
 <param name="deleteAfterLoad"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.ProtocolloManager.CaricaFile(System.Int64,System.String,System.Boolean)">
 <summary>
 Carica file protocollo
 </summary>
 <param name="id"></param>
 <param name="filePath"></param>
 <param name="deleteAfterLoad"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.ProtocolloManager.CaricaFile(System.Int64,System.Byte[])">
 <summary>
 Carica il file di protocollo
 </summary>
 <param name="id"></param>
 <param name="data"></param>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.ProtocolloManager.CaricaFile(SDS.CommonUtils.ProtocolloDTO,System.Byte[])">
 <summary>
 Carica il file di protocollo
 </summary>
 <param name="proto"></param>
 <param name="data"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.ProtocolloManager.LeggiFile(System.Int64)">
 <summary>
 Legge il file di protocollo
 </summary>
 <param name="id"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.ProtocolloManager.LeggiFile(SDS.CommonUtils.ProtocolloDTO)">
 <summary>
 Legge il file di protocollo
 </summary>
 <param name="proto"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.ProtocolloManager.GetFileInfo(System.Int64)">
 <summary>
 Ritorna info sul file. Se non esiste ritorna null
 </summary>
 <param name="id"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.ProtocolloManager.GetFileInfo(SDS.CommonUtils.ProtocolloDTO)">
 <summary>
 Ritorna info sul file. Se non esiste ritorna null
 </summary>
 <param name="proto"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.ProtocolloManager.EliminaFile(System.Int64)">
 <summary>
 Elimina il file di protocollo
 </summary>
 <param name="id"></param>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.ProtocolloManager.EliminaFile(SDS.CommonUtils.ProtocolloDTO)">
 <summary>
 Elimina il file del protocollo
 </summary>
 <param name="prot"></param>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.ProtocolloManager.EsisteFile(SDS.CommonUtils.ProtocolloDTO)">
 <summary>
 Verifica esistenza file protocollo
 </summary>
 <param name="prot"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.ProtocolloManager.EsisteFile(System.Int64)">
 <summary>
 Verifica esistenza file protocollo
 </summary>
 <param name="id"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.ProtocolloManager.caricaFileInternal(SDS.CommonUtils.ProtocolloDTO,System.Byte[])">
 <summary>
 Carica il file a partire da un DTO
 </summary>
 <param name="prot"></param>
 <param name="data"></param>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.ProtocolloManager.leggiFileInternal(SDS.CommonUtils.ProtocolloDTO)">
 <summary>
 Legge il file a partire da un DTO
 </summary>
 <param name="prot"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.ProtocolloManager.getFileInfoInternal(SDS.CommonUtils.ProtocolloDTO)">
 <summary>
 Legge informazioni sul File
 </summary>
 <param name="prot"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.ProtocolloManager.eliminaFileInternal(SDS.CommonUtils.ProtocolloDTO)">
 <summary>
 Elimina file a partire da un DTO
 </summary>
 <param name="prot"></param>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.ProtocolloManager.registraEvento(System.Int16,System.String,System.String,System.String,System.Byte[])">
 <summary>
 Registra evento protocollo 
 </summary>
 <param name="eventoIn"></param>
 <param name="numProtoIn"></param>
 <param name="descEvento"></param>
 <param name="dumpProto"></param>
 <param name="dumFile"></param>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.ProtocolloManager.GetNumeroProtocollo(System.DateTime)">
 <summary>
 Calcola nuovo numero protocollo
 </summary>
 <param name="dataProtocolloIn"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.ProtocolloManager.getNumeroProtocolloSequenza(System.DateTime)">
 <summary>
 Calcola nuovo numero protocollo tramite codifica a doppia base assimetrica con limite (chiedere a S. Pelaia)
 </summary>
 <param name="dataProtocolloIn"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.ProtocolloManager.getNumeroProtocolloMAX(System.DateTime)">
 <summary>
 Calcola nuovo numero protocollo tramite MAX + 1
 </summary>
 <param name="dataProtocolloIn"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:SDS.CommonUtils.SequenceData">
 <summary>
 Classe per la gestione centralizzata di generatori di numeri sequenziali
 con accesso esclusivo.
 
 Attenzione i numeri generati non sono regredibili in base alle transazioni (Bruciati)
 </summary>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.SequenceData.#ctor(System.Data.Common.DbConnection)">
 <summary>
 In input una connessione db (aperta o chiusa) da cui viene generata una nuova connessione avulsa da essa (no eventuale transazione)
 </summary>
 <param name="dbConnToClone"></param>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.SequenceData.#ctor(System.Data.Common.DbConnection,System.String)">
 <summary>
 In input una connessione db (aperta o chiusa) da cui viene generata una nuova connessione avulsa da essa (no eventuale transazione) ed il nome db da utilizzare (in caso di app muli database)
 </summary>
 <param name="dbConnToClone"></param>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.SequenceData.CheckSequenceEnv">
 <summary>
 Esegue controlli sulla corretta configurazione dell'ambiente (esegue tutti i metodi con una sequenza temporanea che viene poi eliminata).
 Torna 'OK' in caso di ambiente configurato e test superato, altrimenti il testo dell'errore
 </summary>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.SequenceData.DropSequence(System.String)">
 <summary>
 Elimina definitivamente una sequenza (DELETE)
 </summary>
 <param name="sequenceName"></param>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.SequenceData.ResetSequence(System.String)">
 <summary>
 Resetta una sequenza a Zero. Se non esiste la crea e la imposta a zero
 </summary>
 <param name="sequenceName"></param>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.SequenceData.GetNextValue(System.String)">
 <summary>
 Dato un nome di sequenza ritorna il valore incrementato di 1
 </summary>
 <param name="sequenceName"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:SDS.CommonUtils.SharedDataManager">
 <summary>
 Classe per la gestione delle risorse condivise
 </summary>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.SharedDataManager.#ctor(System.Int16,System.String)">
 <summary>
 New con parametri specifici
 </summary>
 <param name="codApplicazione"></param>
 <param name="connString"></param>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.SharedDataManager.SaveFromFile(System.String,System.String,System.Int32,System.Boolean)">
 <summary>
 Salva file fisico in SharedData e consente di eliminare il file locale
 </summary>
 <param name="filePath"></param>
 <param name="mime"></param>
 <param name="minuti"></param>
 <param name="delete"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.SharedDataManager.SaveFromFile(System.String,System.Boolean)">
 <summary>
 Salva file fisico in SharedData
 </summary>
 <param name="filePath"></param>
 <param name="elimina"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.SharedDataManager.SaveFromFile(System.String,System.String,System.Int32)">
 <summary>
 Salva file fisico in SharedData
 </summary>
 <param name="filePath"></param>
 <param name="mime"></param>
 <param name="minuti"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.SharedDataManager.SaveFromFile(System.String)">
 <summary>
 Salva file in SharedData
 </summary>
 <param name="filePath"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.SharedDataManager.SaveFromStream(System.String,System.IO.Stream,System.String,System.Int32)">
 <summary>
 Salva stream su SharedData
 </summary>
 <param name="nome"></param>
 <param name="stream"></param>
 <param name="mime"></param>
 <param name="minuti"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.SharedDataManager.SaveFromStream(System.String,System.IO.Stream)">
 <summary>
 Salva uno stream su SharedData
 </summary>
 <param name="nome"></param>
 <param name="stream"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.SharedDataManager.SaveFromURL(System.String,System.String,System.Int32)">
 <summary>
 Salva dato su SharedData da richiesta web
 </summary>
 <param name="name"></param>
 <param name="url"></param>
 <param name="minuti"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.SharedDataManager.SaveFromURL(System.String,System.String)">
 
 <summary>
 Salva dato su SharedData da richiesta web
 </summary>
 <param name="name"></param>
 <param name="url"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.SharedDataManager.SaveFromBuffer(System.String,System.Byte[])">
 <summary>
 Salva buffer su SharedData impostandone la scadenza a 5 Min
 </summary>
 <param name="nome"></param>
 <param name="buffer"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.SharedDataManager.SaveFromBuffer(System.String,System.Byte[],System.String,System.Int32)">
 <summary>
 Salva dati su SharedData
 </summary>
 <param name="nome"></param>
 <param name="mime"></param>
 <param name="buffer"></param>
 <param name="minuti"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.SharedDataManager.DeleteData(System.String)">
 <summary>
 Elimina un dato per Id
 </summary>
 <param name="id"></param>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.SharedDataManager.ReadOnFile(System.String,System.String,System.Boolean)">
 <summary>
 Legge dato Shared Data su file
 </summary>
 <param name="id"></param>
 <param name="filePath"></param>
 <param name="elimina">
 Indica se dopo la lettura il dato va eliminato
 </param>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.SharedDataManager.ReadOnStream(System.String,System.IO.Stream@,System.Boolean)">
 <summary>
 Legge dato SharedData su stream. Se lo stream e' nullo viene creato di default un MemoryStream
 </summary>
 <param name="id"></param>
 <param name="stream"></param>
 <param name="elimina">
 Indica se dopo la lettura il dato va eliminato
 </param>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.SharedDataManager.Read(System.String,System.Boolean)">
 <summary>
 Legge un dato. Se elimina = true il dato viene eliminato subito dopo la lettura e non sar' piu' disponibile
 </summary>
 <param name="id"></param>
 <param name="elimina">
 Indica se dopo la lettura il dato va eliminato
 </param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:SDS.CommonUtils.Assegno">
 <summary>
 Identifica le informazioni relative ad un assegno
 </summary>
 <remarks></remarks>
</member>
<member name="T:SDS.CommonUtils.Bonifico">
 <summary>
 Identifica le informazioni relative ad un bonifico
 </summary>
 <remarks></remarks>
</member>
<member name="T:SDS.CommonUtils.FileBonificiWriterXml">
 <summary>
 Classe Per La Scrittura di File Flussi Bonifici
 </summary>
 <remarks></remarks>
</member>
<member name="P:SDS.CommonUtils.FileBonificiWriterXml.DataValuta">
 <summary>
 in file SCT la data esecuzione (ReqdExctnDt) corrisponde alla data valuta
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SDS.CommonUtils.FileBonificiWriterXml.Bonifici">
 <summary>
 Lista di bonifici attualmente inseriti
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.FileBonificiWriterXml.AggiungiBonifico(SDS.CommonUtils.Bonifico)">
 <summary>
 Aggiunge Bonifico a lista da evadere
 </summary>
 <param name="oBonificoIn"></param>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.FileBonificiWriterXml.ScriviFlusso">
 <summary>
 Esegue la scrittura fisica del file con il flusso
 </summary>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.FileBonificiWriterXml.SCT_ChiudiBloccoTestata_SEPA">
 <summary>
 Scrive tag chiusura finale (Testata, PmtTpinf)
 </summary>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.FileBonificiWriterXml.SCT_ReplaceGrpHdr_SEPA(System.Int32,System.Decimal)">
 <summary>
 Rimpiazza i contatori nell'header
 </summary>
 <param name="dispTot"></param>
 <param name="importoTot"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.FileBonificiWriterXml.SCT_CdtTrfTxInf_IT_SEPA(System.Int32,System.String,System.String,System.Decimal,System.String,System.String,System.String)">
 <summary>
 Contiene il dettaglio delle singole disposizioni facenti parte della distinta di un bonifico verso l’Italia
 </summary>
</member>
<member name="M:SDS.CommonUtils.FileBonificiWriterXml.SCT_CdtTrfTxInf_EE_SEPA(System.Int32,System.String,System.Decimal,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.DateTime,System.String)">
 <summary>
 Contiene il dettaglio delle singole disposizioni facenti parte della distinta di un bonifico verso l’estero
 </summary>
</member>
<member name="M:SDS.CommonUtils.FileBonificiWriterXml.ValidazioneFlusso">
 <summary>
 Esegue validazione dati standard creditore + flusso
 </summary>
 <remarks></remarks>
</member>
<member name="T:SDS.CommonUtils.FileSepaSCTWriterXml">
 <summary>
 Classe per la Scrittura di File Flussi Bonifici SEPA XML 
 </summary>
 <remarks></remarks>
</member>
<member name="P:SDS.CommonUtils.FileSepaSCTWriterXml.DataValuta">
 <summary>
 in file SCT la data esecuzione (ReqdExctnDt) corrisponde alla data valuta
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SDS.CommonUtils.FileSepaSCTWriterXml.Bonifici">
 <summary>
 Lista di bonifici attualmente inseriti
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.FileSepaSCTWriterXml.AggiungiBonifico(SDS.CommonUtils.Bonifico)">
 <summary>
 Aggiunge Bonifico a lista da evadere
 </summary>
 <param name="oBonificoIn"></param>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.FileSepaSCTWriterXml.ScriviFlusso">
 <summary>
 Esegue la scrittura fisica del file con il flusso
 </summary>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.FileSepaSCTWriterXml.SCT_ChiudiBloccoTestata_SEPA">
 <summary>
 Scrive tag chiusura finale (Testata, PmtTpinf)
 </summary>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.FileSepaSCTWriterXml.SCT_ReplaceGrpHdr_SEPA(System.Int32,System.Decimal)">
 <summary>
 Rimpiazza i contatori nell'header
 </summary>
 <param name="dispTot"></param>
 <param name="importoTot"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.FileSepaSCTWriterXml.SCT_CdtTrfTxInf_IT_SEPA(System.Int32,System.String,System.String,System.Decimal,System.String,System.String,System.String,System.String)">
 <summary>
 Contiene il dettaglio delle singole disposizioni facenti parte della distinta di un bonifico verso l’Italia
 </summary>
</member>
<member name="M:SDS.CommonUtils.FileSepaSCTWriterXml.ValidazioneFlusso">
 <summary>
 Esegue validazione dati standard creditore + flusso
 </summary>
 <remarks></remarks>
</member>
<member name="T:SDS.CommonUtils.IbanInfo">
 <summary>
 Decomposizione di un iban nelle corrispondenti
 sottounità
 </summary>
 <remarks></remarks>
</member>
<member name="T:SDS.CommonUtils.InfoIbanPaese">
 <summary>
 Contiene informazioni sulla tipologia utilizzata in un paese
 </summary>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.InfoIbanPaese.#ctor(System.String,System.String,System.String)">
 <summary>
 Imposta informazioni iban paese.
 La codifica attesa è:
 IT00KBBBBBSSSSSCCCCCCCCCCCC dove
 - IT è il cod paese
 - 00 indica il checkdigit IBAN
 - K è un codice di controllo (italia CIN)
 - B è il codice della banca (italia ABI)
 - S è il codice dello sportello (italia CAB)
 - C è il numero di conto
 </summary>
 <param name="isoNazione"></param>
 <param name="descNazione"></param>
 <param name="codificaIban"></param>
</member>
<member name="M:SDS.CommonUtils.InfoIbanPaese.DecomponiIban(System.String)">
 <summary>
 Dato un Iban ritorna una decomposizione
 </summary>
 <param name="iban"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.InfoIbanPaese.RicomponiIban(System.String,System.String,System.String,System.String,System.String)">
 <summary>
 Dati alcuni valori standard che compongono un iban ritorna le informazioni iban 
 secondo la codifica del paese
 </summary>
 <param name="checkDigit"></param>
 <param name="codiceControllo"></param>
 <param name="codiceBanca"></param>
 <param name="codiceSportello"></param>
 <param name="numeroConto"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:SDS.CommonUtils.FileAssegniWriter">
 <summary>
 Classe Per La Scrittura di File Flussi Assegni
 </summary>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.FileAssegniWriter.TerminaFlusso">
 <summary>
 Termina scrittura flusso e chiude il file
 </summary>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.FileAssegniWriter.ScriviAssegno(System.String,System.String,System.Decimal,System.String,System.String,System.String,System.String,System.DateTime,System.String)">
 <summary>
 Scrive Bonifico nel flusso
 </summary>
 <param name="nominativo"></param>
 <param name="codiceBeneficiario"></param>
 <param name="importo"></param>
 <param name="indirizzo"></param>
 <param name="cap"></param>
 <param name="localita"></param>
 <param name="provincia"></param>
 <param name="dataValuta"></param>
 <param name="descrizioneOperazione"></param>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.FileAssegniWriter.ScriviRecord(System.String)">
 <summary>
 Scrive record su file
 </summary>
 <param name="recordIn"></param>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.FileAssegniWriter.LIQCreaRecordPC">
 <summary>
 Record di testa
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.FileAssegniWriter.LIQCreaRecordEF">
 <summary>
 Scrive record fine
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.FileAssegniWriter.LIQCreaRecord10(System.Decimal,System.DateTime,System.String)">
 <summary>
 Ritorna record 10
 </summary>
 <param name="importo"></param>
 <param name="dataValuta"></param>
 <param name="codiceClienteBeneficiario"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.FileAssegniWriter.LIQCreaRecord20">
 <summary>
 Ritorna record 20
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.FileAssegniWriter.LIQCreaRecord30(System.String)">
 <summary>
 Ritorna record 30
 </summary>
 <param name="nominativo"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.FileAssegniWriter.LIQCreaRecord40(System.String,System.String,System.String,System.String)">
 <summary>
 Ritorna record 40
 </summary>
 <param name="indirizzo"></param>
 <param name="cap"></param>
 <param name="localita"></param>
 <param name="provincia"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.FileAssegniWriter.LIQCreaRecord50(System.String)">
 <summary>
 Ritorna record 50
 </summary>
 <param name="descrizioneOperazione"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.FileAssegniWriter.LIQCreaRecord70">
 <summary>
 Ritorna record 70
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:SDS.CommonUtils.FileBonificiWriter">
 <summary>
 Classe Per La Scrittura di File Flussi Bonifici
 </summary>
 <remarks></remarks>
</member>
<member name="P:SDS.CommonUtils.FileBonificiWriter.Bonifici">
 <summary>
 Lista di bonifici attualmente inseriti
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.FileBonificiWriter.AggiungiBonifico(SDS.CommonUtils.Bonifico)">
 <summary>
 Aggiunge Bonifico a lista da evadere
 </summary>
 <param name="oBonificoIn"></param>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.FileBonificiWriter.ScriviFlusso">
 <summary>
 Esegue la scrittura fisica del file con il flusso
 </summary>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.FileBonificiWriter.ValidazioneFlusso">
 <summary>
 Esegue validazione dati standard creditore + flusso
 </summary>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.FileBonificiWriter.LIQCreaRecordPC">
 <summary>
 Record di testa
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.FileBonificiWriter.LIQCreaRecordEF">
 <summary>
 Scrive record fine
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.FileBonificiWriter.creaRecord10(SDS.CommonUtils.Bonifico)">
 <summary>
 Ritorna Recor 10
 </summary>
 <param name="bonificoIn"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.FileBonificiWriter.creaRecord16">
 <summary>
 Ritorna record 16
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.FileBonificiWriter.creaRecord17(SDS.CommonUtils.Bonifico)">
 <summary>
 Ritorna record 17
 </summary>
 <param name="bonificoIn"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.FileBonificiWriter.creaRecord20">
 <summary>
 Ritorna record 20
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.FileBonificiWriter.creaRecord30(SDS.CommonUtils.Bonifico)">
 <summary>
 Ritorna record 30
 </summary>
 <param name="bonificoIn"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.FileBonificiWriter.creaRecord40(SDS.CommonUtils.Bonifico)">
 <summary>
 Ritorna record 40
 </summary>
 <param name="bonificoIn"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.FileBonificiWriter.creaRecord50(SDS.CommonUtils.Bonifico)">
 <summary>
 Ritorna record 50
 </summary>
 <param name="bonificoIn"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.FileBonificiWriter.creaRecord70(SDS.CommonUtils.Bonifico)">
 <summary>
 Ritorna record 70
 </summary>
 <param name="bonificoIn"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.CodiceFiscaleUT.Controlla(System.String)">
 <summary>
 Esegue la validazione di un codice fiscale ritornando un oggetto esito
 </summary>
 <param name="codFiscIn"></param>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.CodiceFiscaleUT.Controlla(System.String,System.String,System.String,System.DateTime,System.Char)">
 <summary>
 Esegue la validazione di un codice fiscale con i rispettivi dati in input
 </summary>
 <param name="cfIn"></param>
 <param name="nomeIn"></param>
 <param name="cognomeIn"></param>
 <param name="dataNascitaIn"></param>
 <param name="sessoIn"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.CodiceFiscaleUT.ControllaCheck(System.String)">
 <summary>
 Esegue la validazione di un codice fiscale lanciando eccezione in caso di errore
 </summary>
 <param name="codFiscIn"></param>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.CodiceFiscaleUT.CalcolaCarattereControllo(System.String)">
 <summary>
 Calcola il carattere di controllo di una partita iva
 </summary>
 <param name="value"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.CodiceFiscaleUT.DecodeSessoFromCF(System.String)">
 <summary>
 Dato un codice fiscale ritorna il sesso (M o F)
 </summary>
 <param name="cfIn"></param>
 <returns></returns>
</member>
<member name="M:SDS.CommonUtils.CodiceFiscaleUT.DecodeDataNascitaFromCF(System.String)">
 <summary>
 Decodifica una data di nascita da codice fiscale attenzione per gli ultacentenari non funziona: li tratta come bambini!!!
 es. anno 1916, su cf 16, viene trattato come 2016
 </summary>
 <param name="cfIn"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.PartitaIvaUT.Controlla(System.String)">
 <summary>
 Esegue la validazione di una partita IVA ritornando un oggetto esito
 </summary>
 <param name="partitaIvaIn"></param>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.PartitaIvaUT.ControllaCheck(System.String)">
 <summary>
 Esegue la validazione di una partita IVA lanciando eccezione in caso di errore
 </summary>
 <param name="value"></param>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.PartitaIvaUT.CalcolaCarattereControllo(System.String)">
 <summary>
 Calcola il carattere di controllo di una partita iva
 </summary>
 <param name="value"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:SDS.CommonUtils.PasswordCheck.EnumMatch">
 <summary>
 Enumeratore per tutte le Regole di Match adottate
 </summary>
</member>
<member name="P:SDS.CommonUtils.PasswordCheck.MinLength">
 <summary>
 numero MINIMO di caratteri ammessi
 </summary>
 <returns></returns>
</member>
<member name="P:SDS.CommonUtils.PasswordCheck.MaxLength">
 <summary>
 numero MASSIMO di caratteri ammessi
 </summary>
 <returns></returns>
</member>
<member name="P:SDS.CommonUtils.PasswordCheck.MinUppercase">
 <summary>
 numero MINIMO di lettere maiuscole ammesse (0:nessun limite , -1:non ammesso)
 </summary>
 <returns></returns>
</member>
<member name="P:SDS.CommonUtils.PasswordCheck.MinNumeric">
 <summary>
 numero MINIMO di valori numerici ammessi (0:nessun limite , -1:non ammesso)
 </summary>
 <returns></returns>
</member>
<member name="M:SDS.CommonUtils.PasswordCheck.CheckMatch(System.String)">
 <summary>
 verifica di tutte le regola di match per la validazione della password
 </summary>
 <param name="StringaToMatchIn">password da verificare</param>
 <returns></returns>
</member>
<member name="M:SDS.CommonUtils.PasswordCheck.GetSpecialCharsAllowed">
 <summary>
 Stringa contenente tutti i caratteriSpeciali ammessi
 </summary>
 <returns></returns>
</member>
<member name="M:SDS.CommonUtils.PasswordCheck.getInfoPswLength">
 <summary>
 Testo informativo per la regola di validazione password relativo alla lunghezza ammessa
 </summary>
 <returns></returns>
</member>
<member name="M:SDS.CommonUtils.PasswordCheck.getInfoPswLowerCase">
 <summary>
 Testo informativo per la regola di validazione password relativo alle lettere minuscole
 </summary>
 <returns></returns>
</member>
<member name="M:SDS.CommonUtils.PasswordCheck.getInfoPswUpperCase">
 <summary>
 Testo informativo per la regola di validazione password relativo alle lettere maiuscole
 </summary>
 <returns></returns>
</member>
<member name="M:SDS.CommonUtils.PasswordCheck.getInfoPswNumeri">
 <summary>
 Testo informativo per la regola di validazione password relativo ai valori numerici
 </summary>
 <returns></returns>
</member>
<member name="M:SDS.CommonUtils.PasswordCheck.getInfoPswSpecialChars">
 <summary>
 Testo informativo per la regola di validazione password relativo ai caratteri speciali
 </summary>
 <returns></returns>
</member>
<member name="T:SDS.CommonUtils.CharCodes">
 <summary>
 Codifiche caratteri
 </summary>
 <remarks></remarks>
</member>
<member name="F:SDS.CommonUtils.CharCodes.NUL">
 <summary>
 Null char
 </summary>
 <remarks></remarks>
</member>
<member name="F:SDS.CommonUtils.CharCodes.SOH">
 <summary>
 Start of header
 </summary>
 <remarks></remarks>
</member>
<member name="F:SDS.CommonUtils.CharCodes.STX">
 <summary>
 Start of text
 </summary>
 <remarks></remarks>
</member>
<member name="F:SDS.CommonUtils.CharCodes.ETX">
 <summary>
 End of text
 </summary>
 <remarks></remarks>
</member>
<member name="F:SDS.CommonUtils.CharCodes.EOT">
 <summary>
 End of transmission
 </summary>
 <remarks></remarks>
</member>
<member name="F:SDS.CommonUtils.CharCodes.ENQ">
 <summary>
 Enquiry
 </summary>
 <remarks></remarks>
</member>
<member name="F:SDS.CommonUtils.CharCodes.ACK">
 <summary>
 Acknowledge
 </summary>
 <remarks></remarks>
</member>
<member name="F:SDS.CommonUtils.CharCodes.BEL">
 <summary>
 Bell
 </summary>
 <remarks></remarks>
</member>
<member name="F:SDS.CommonUtils.CharCodes.BS">
 <summary>
 Backspace
 </summary>
 <remarks></remarks>
</member>
<member name="F:SDS.CommonUtils.CharCodes.TAB">
 <summary>
 Horizontal tab
 </summary>
 <remarks></remarks>
</member>
<member name="F:SDS.CommonUtils.CharCodes.LF">
 <summary>
 Line feed
 </summary>
 <remarks></remarks>
</member>
<member name="F:SDS.CommonUtils.CharCodes.VT">
 <summary>
 Vertical tab
 </summary>
 <remarks></remarks>
</member>
<member name="F:SDS.CommonUtils.CharCodes.FF">
 <summary>
 NP form feed, new page
 </summary>
 <remarks></remarks>
</member>
<member name="F:SDS.CommonUtils.CharCodes.CR">
 <summary>
 Carriage return
 </summary>
 <remarks></remarks>
</member>
<member name="F:SDS.CommonUtils.CharCodes.SO">
 <summary>
 Shift out
 </summary>
 <remarks></remarks>
</member>
<member name="F:SDS.CommonUtils.CharCodes.SI">
 <summary>
 Shift in
 </summary>
 <remarks></remarks>
</member>
<member name="F:SDS.CommonUtils.CharCodes.DLE">
 <summary>
 Data link escape
 </summary>
 <remarks></remarks>
</member>
<member name="F:SDS.CommonUtils.CharCodes.DC1">
 <summary>
 Device control 1
 </summary>
 <remarks></remarks>
</member>
<member name="F:SDS.CommonUtils.CharCodes.DC2">
 <summary>
 Device control 2
 </summary>
 <remarks></remarks>
</member>
<member name="F:SDS.CommonUtils.CharCodes.DC3">
 <summary>
 Device control 3
 </summary>
 <remarks></remarks>
</member>
<member name="F:SDS.CommonUtils.CharCodes.DC4">
 <summary>
 Device control 4
 </summary>
 <remarks></remarks>
</member>
<member name="F:SDS.CommonUtils.CharCodes.NAK">
 <summary>
 Negative acknowledge
 </summary>
 <remarks></remarks>
</member>
<member name="F:SDS.CommonUtils.CharCodes.SYN">
 <summary>
 Synchronous idle
 </summary>
 <remarks></remarks>
</member>
<member name="F:SDS.CommonUtils.CharCodes.ETB">
 <summary>
 End of transmission block
 </summary>
 <remarks></remarks>
</member>
<member name="F:SDS.CommonUtils.CharCodes.CAN">
 <summary>
 Cancel
 </summary>
 <remarks></remarks>
</member>
<member name="F:SDS.CommonUtils.CharCodes.EM">
 <summary>
 End of medium
 </summary>
 <remarks></remarks>
</member>
<member name="F:SDS.CommonUtils.CharCodes.SUBS">
 <summary>
 Substitute
 </summary>
 <remarks></remarks>
</member>
<member name="F:SDS.CommonUtils.CharCodes.ESC">
 <summary>
 Escape
 </summary>
 <remarks></remarks>
</member>
<member name="F:SDS.CommonUtils.CharCodes.FS">
 <summary>
 File separator
 </summary>
 <remarks></remarks>
</member>
<member name="F:SDS.CommonUtils.CharCodes.GS">
 <summary>
 Group separator
 </summary>
 <remarks></remarks>
</member>
<member name="F:SDS.CommonUtils.CharCodes.RS">
 <summary>
 Record separator
 </summary>
 <remarks></remarks>
</member>
<member name="F:SDS.CommonUtils.CharCodes.US">
 <summary>
 Unit separator
 </summary>
 <remarks></remarks>
</member>
<member name="F:SDS.CommonUtils.CharCodes.SPACE">
 <summary>
 Blank
 </summary>
 <remarks></remarks>
</member>
<member name="F:SDS.CommonUtils.CharCodes.SYM_ESCL">
 <summary>
 Carattere !
 </summary>
 <remarks></remarks>
</member>
<member name="F:SDS.CommonUtils.CharCodes.SYM_QUOTE">
 <summary>
 Carattere "
 </summary>
 <remarks></remarks>
</member>
<member name="F:SDS.CommonUtils.CharCodes.SYM_HASH">
 <summary>
 Carattere #
 </summary>
 <remarks></remarks>
</member>
<member name="F:SDS.CommonUtils.CharCodes.SYM_DOLL">
 <summary>
 Carattere $
 </summary>
 <remarks></remarks>
</member>
<member name="F:SDS.CommonUtils.CharCodes.SYM_PERC">
 <summary>
 Carattere %
 </summary>
 <remarks></remarks>
</member>
<member name="F:SDS.CommonUtils.CharCodes.SYM_AMP">
 <summary>
 Carattere &amp;
 </summary>
 <remarks></remarks>
</member>
<member name="F:SDS.CommonUtils.CharCodes.SYM_APOS">
 <summary>
 Carattere &quot;
 </summary>
 <remarks></remarks>
</member>
<member name="F:SDS.CommonUtils.CharCodes.SYM_PARL">
 <summary>
 Carattere (
 </summary>
 <remarks></remarks>
</member>
<member name="F:SDS.CommonUtils.CharCodes.SYM_PARR">
 <summary>
 Carattere )
 </summary>
 <remarks></remarks>
</member>
<member name="F:SDS.CommonUtils.CharCodes.SYM_MULT">
 <summary>
 Carattere *
 </summary>
 <remarks></remarks>
</member>
<member name="F:SDS.CommonUtils.CharCodes.SYM_PLUS">
 <summary>
 Carattere +
 </summary>
 <remarks></remarks>
</member>
<member name="F:SDS.CommonUtils.CharCodes.SYM_COMMA">
 <summary>
 Carattere ,
 </summary>
 <remarks></remarks>
</member>
<member name="F:SDS.CommonUtils.CharCodes.SYM_MINU">
 <summary>
 Carattere -
 </summary>
 <remarks></remarks>
</member>
<member name="F:SDS.CommonUtils.CharCodes.SYM_POINT">
 <summary>
 Carattere .
 </summary>
 <remarks></remarks>
</member>
<member name="F:SDS.CommonUtils.CharCodes.SYM_SLASH">
 <summary>
 Carattere /
 </summary>
 <remarks></remarks>
</member>
<member name="F:SDS.CommonUtils.CharCodes.SYM_DPOINT">
 <summary>
 Carattere :
 </summary>
 <remarks></remarks>
</member>
<member name="F:SDS.CommonUtils.CharCodes.SYM_SEMICOL">
 <summary>
 Carattere ;
 </summary>
 <remarks></remarks>
</member>
<member name="F:SDS.CommonUtils.CharCodes.SYM_LT">
 <summary>
 Carattere &lt;
 </summary>
 <remarks></remarks>
</member>
<member name="F:SDS.CommonUtils.CharCodes.SYM_EQ">
 <summary>
 Carattere =
 </summary>
 <remarks></remarks>
</member>
<member name="F:SDS.CommonUtils.CharCodes.SYM_GT">
 <summary>
 Carattere &gt;
 </summary>
 <remarks></remarks>
</member>
<member name="F:SDS.CommonUtils.CharCodes.SYM_QUESTION">
 <summary>
 Carattere ?
 </summary>
 <remarks></remarks>
</member>
<member name="F:SDS.CommonUtils.CharCodes.SYM_AT">
 <summary>
 Carattere @
 </summary>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.Conversion.CodificaProgressivoProtocollo(System.Int64)">
 <summary>
 Codifica il progressivo del protocollo SDS
 </summary>
 <param name="iNumIn"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.Conversion.DecodificaProgressivoProtocollo(System.String)">
 <summary>
 Decodifica il progressivo del protocollo SDS
 </summary>
 <param name="sNumIn"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.Conversion.ConvNumToBase(System.Int64,System.Int16,System.String)">
 <summary>
 Codifica numero in formato arbitrario (compreso tra 2 e 36)
 </summary>
 <param name="number"></param>
 <param name="radix"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.Conversion.ConvBaseToNum(System.String,System.Int16,System.String)">
 <summary>
 Decodifica stringa in formato arbitrario (tra 2 e 36) in formato decimale
 </summary>
 <param name="number"></param>
 <param name="radix"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:SDS.CommonUtils.Db">
 <summary>
 Utilità Db
 </summary>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.Db.SetData(System.Object,System.Object)">
 <summary>
 Confronta il primo parametro con il secondo: se sono uguali e dello stesso tipo ritorna DBNull
 altrimenti ritorna il primo
 </summary>
 <param name="valueForDb">
 Valore da testare
 </param>
 <param name="nullValue">
 Parametro di test
 </param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.Db.GetData(System.Object,System.Object)">
 <summary>
 Se il primo parametro è DBNull ritorna il secondo altrimenti ritorna il primo
 </summary>
 <param name="valueFromDb"></param>
 <param name="defaultValue"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.DecomposizioneCifre.AddCifra(System.Decimal)">
 <summary>
 Aggiunge cifra alla lista
 </summary>
 <param name="value"></param>
</member>
<member name="M:SDS.CommonUtils.DecomposizioneCifre.Calcola(System.Decimal)">
 <summary>
 Esegue calcolo
 </summary>
 <param name="value"></param>
 <returns></returns>
</member>
<member name="M:SDS.CommonUtils.DecomposizioneCifre.CalcolaPercorsi(System.Decimal)">
 <summary>
 Calcola tutti i percorsi. Attenzione in presenza di parecchie cifre/valori bassi cifre in quanto scoppia la memoria.
 Es: valore=100 e le seguenti cifre (es 5, 3, 2, 1.5, 1.2, 1) danno circa 250000 combinazioni in 30 sec di elaborazione con circa 250MB di memoria occupata.
 Usarlo con cautela!!!!!!!
 </summary>
 <param name="value"></param>
 <returns></returns>
</member>
<member name="M:SDS.CommonUtils.DecomposizioneCifre.CalcolaPercorsi(System.Decimal,System.Decimal)">
 <summary>
 Calcola tutti i percorsi escludendo cifre sotto una soglia percentuale
 </summary>
 <param name="value"></param>
 <param name="percentuale"></param>
 <returns></returns>
</member>
<member name="M:SDS.CommonUtils.DecomposizioneCifre.CalcolaPercorsi(System.Decimal,System.Collections.Generic.IList{System.Decimal},System.Collections.Generic.List{System.Decimal},System.Collections.Generic.List{System.Collections.Generic.List{System.Decimal}},System.Int32)">
 <summary>
 Calcola tutti i percorsi escludendo cifre sotto una soglia percentuale e con un numero definito di profondita' di percorso
 </summary>
 <param name="value"></param>
 <param name="listaCifre"></param>
 <param name="currentPath"></param>
 <param name="paths"></param>
</member>
<member name="T:SDS.CommonUtils.EsitoControllo">
 <summary>
 Rappresenta l'esito di una validazione effettuata
 </summary>
 <remarks></remarks>
</member>
<member name="P:SDS.CommonUtils.EsitoControllo.IsValido">
 <summary>
 Indica se la validazione ha avuto successo
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SDS.CommonUtils.EsitoControllo.EsitoCodice">
 <summary>
 Codice numerico addizionale dell'errore
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SDS.CommonUtils.EsitoControllo.EsitoTesto">
 <summary>
 Testo relativo alla condizione (di errore o info)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SDS.CommonUtils.EsitoControllo.TipoControllo">
 <summary>
 Codice identificativo del controllo effettuato
 </summary>
 <returns></returns>
</member>
<member name="P:SDS.CommonUtils.EsitoControllo.ChiaveEntita">
 <summary>
 Chiave identificativa dell'entita' relativa al controllo effettuato
 </summary>
 <returns></returns>
</member>
<member name="P:SDS.CommonUtils.EsitoControllo.AttributiCustom">
 <summary>
 Attributi aggiuntivi legati al controllo
 </summary>
 <returns></returns>
</member>
<member name="T:SDS.CommonUtils.JsonWriter">
 <summary>
 Classe per la scrittura in notazione JSON
 </summary>
</member>
<member name="M:SDS.CommonUtils.SqlUT.StringaPerSQL(System.String)">
 <summary>
 Data una stringa ritorna la corrispondente compatibile SQL
 </summary>
 <param name="value"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.SqlUT.StringaNullPerSQL(System.String)">
 <summary>
 Se la stringa e' vuota ritorna null
 </summary>
 <param name="value"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.SqlUT.DataPerSQL(System.DateTime)">
 <summary>
 Ritorna rappresentazione in stringa di data
 </summary>
 <param name="value"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.SqlUT.DataNullPerSQL(System.DateTime)">
 <summary>
 Se data minvalue ritorna null
 </summary>
 <param name="value"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.SqlUT.DataOraPerSQL(System.DateTime)">
 <summary>
 Ritorna rappresentazione in stringa di data/ora
 </summary>
 <param name="value"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.SqlUT.DataOraNullPerSQL(System.DateTime)">
 <summary>
 Se data/ora minvalue ritorna null
 </summary>
 <param name="value"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.SqlUT.GetDbValue(System.Object,System.Object)">
 <summary>
 Dato un valore se null ritorna il test
 </summary>
 <param name="obj"></param>
 <param name="ifnull"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.SqlUT.SetDbValue(System.Object,System.Object)">
 <summary>
 Dato un valore ritorna un valore compatibile con il db
 </summary>
 <param name="obj"></param>
 <param name="nullTest"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:SDS.CommonUtils.TransactionalDictionary`2">
 <summary>
 Dizionario transazionale
 </summary>
 <typeparam name="TKey"></typeparam>
 <typeparam name="TValue"></typeparam>
</member>
<member name="P:SDS.CommonUtils.TransactionalDictionary`2.ActiveDictionary">
 <summary>
 Dizionario interno correntemente attivo (transazionale o consolidato)
 </summary>
 <returns></returns>
</member>
<member name="M:SDS.CommonUtils.TransactionalDictionary`2.BeginTransaction">
 <summary>
 Avvia transazione
 </summary>
</member>
<member name="M:SDS.CommonUtils.TransactionalDictionary`2.CommitTransaction">
 <summary>
 Conferma le variazioni effettuate in transazione
 </summary>
</member>
<member name="M:SDS.CommonUtils.TransactionalDictionary`2.RollbackTransaction">
 <summary>
 Elimina variazioni effettuate in transazione
 </summary>
</member>
<member name="P:SDS.CommonUtils.TransactionalDictionary`2.IsInTransaction">
 <summary>
 Indica se siamo in transazione
 </summary>
 <returns></returns>
</member>
<member name="T:SDS.CommonUtils.FakeData_StaticData">
 <summary>
 Dati statici per generazione dati fake
 </summary>
</member>
<member name="T:SDS.CommonUtils.FakeDataGenerator">
 <summary>
 Classe per generare dati fake
 </summary>
</member>
<member name="M:SDS.CommonUtils.FakeDataGenerator.GeneraPersona(System.Boolean,System.Int32,System.Int32,System.String)">
 <summary>
 Genera i dati di una persona
 </summary>
 <param name="maschio"></param>
 <param name="etaMin"></param>
 <param name="etaMax"></param>
 <param name="codComuneCat"></param>
 <returns></returns>
</member>
<member name="M:SDS.CommonUtils.FakeDataGenerator.GeneraPersona(System.Boolean,System.Int32,System.Int32)">
 <summary>
 Genera i dati di una persona con CF generato automaticamente
 </summary>
 <param name="maschio"></param>
 <param name="etaMin"></param>
 <param name="etaMax"></param>
 <returns></returns>
</member>
<member name="M:SDS.CommonUtils.FakeDataGenerator.NormalizeTextCF(System.String)">
 <summary>
 Normalizza testo ascii:
 - converte i caratteri di servizio (0-31) in spazi
 - converte accentati in standard
 - elimina il resto
 </summary>
 <param name="input"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:SDS.CommonUtils.FakeDataGenerator.FakePersona">
 <summary>
 Dati base generati per una persona
 </summary>
</member>
<member name="T:SDS.CommonUtils.BancaException">
 <summary>
 Eccezione di tipo bancario
 </summary>
 <remarks></remarks>
</member>
<member name="T:SDS.CommonUtils.BaseException">
 <summary>
 Eccezione base
 </summary>
 <remarks></remarks>
</member>
<member name="T:SDS.CommonUtils.AsyncFileLogger">
 <summary>
 Logger asincrono
 </summary>
</member>
<member name="M:SDS.CommonUtils.AsyncFileLogger.#ctor(System.String,System.Int32)">
 <summary>
 Registra un log da gestire
 </summary>
 <param name="fileFormatPath"></param>
</member>
<member name="M:SDS.CommonUtils.AsyncFileLogger.BeginWrite">
 <summary>
 Inizia scrittura esclusiva
 </summary>
</member>
<member name="M:SDS.CommonUtils.AsyncFileLogger.EndWrite">
 <summary>
 Termina scrittura esclusiva
 </summary>
</member>
<member name="M:SDS.CommonUtils.AsyncFileLogger.WriteMessage(System.String,System.Object[])">
 <summary>
 Accoda record log
 </summary>
 <param name="msgFmt"></param>
 <param name="args"></param>
</member>
<member name="M:SDS.CommonUtils.AsyncFileLogger.WriteException(System.Exception)">
 <summary>
 Scrive eccezione
 </summary>
 <param name="e"></param>
</member>
<member name="M:SDS.CommonUtils.AsyncFileLogger.Start">
 <summary>
 Avvia logging asincrono
 </summary>
</member>
<member name="M:SDS.CommonUtils.AsyncFileLogger.Stop">
 <summary>
 Chiude il log
 </summary>
</member>
<member name="M:SDS.CommonUtils.AsyncFileLogger.renewBuffer">
 <summary>
 Crea un nuovo buffer per il log
 </summary>
</member>
<member name="M:SDS.CommonUtils.AsyncFileLogger.handleLogs">
 <summary>
 Loop principale di gestione dei log
 </summary>
</member>
<member name="M:SDS.CommonUtils.AsyncFileLogger.flushLogs">
 <summary>
 Scrive log su file
 </summary>
</member>
<member name="T:SDS.CommonUtils.CsvFileWriterNew">
 <summary>
 Classe per scrittura file CSV
 </summary>
 <remarks></remarks>
</member>
<member name="P:SDS.CommonUtils.CsvFileWriterNew.IsInTransaction">
 <summary>
 Indica se e' attiva la gestione transazionale
 </summary>
 <returns></returns>
</member>
<member name="M:SDS.CommonUtils.CsvFileWriterNew.BeginTransaction">
 <summary>
 Avvia transazione
 </summary>
</member>
<member name="M:SDS.CommonUtils.CsvFileWriterNew.CommitTransaction">
 <summary>
 Commit transazione (scrive dati)
 </summary>
</member>
<member name="M:SDS.CommonUtils.CsvFileWriterNew.RollbackTransaction">
 <summary>
 Rollback transazione (scarta dati)
 </summary>
</member>
<member name="M:SDS.CommonUtils.CsvFileWriterNew.transCheck">
 <summary>
 Verifica se transazione attiva
 </summary>
</member>
<member name="M:SDS.CommonUtils.CsvFileWriterNew.transReset">
 <summary>
 Resetta transazione
 </summary>
</member>
<member name="M:SDS.CommonUtils.CsvFileWriterNew.writeBuffer">
 <summary>
 Scrive il buffer
 </summary>
</member>
<member name="M:SDS.CommonUtils.CsvFileWriterNew.ScriviRecord">
 <summary>
 Se ci sono campi nel buffer scrive il record ed azzera il buffer dei campi
 </summary>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.CsvFileWriterNew.ScriviRecordVuoto">
 <summary>
 Scrive una riga vuota senza toccare il contenuto del buffer dei campi
 </summary>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.CsvFileWriterNew.AggiungiCampo(System.String)">
 <summary>
 Aggiunge campo senza verificare la lunghezza
 </summary>
 <param name="valore"></param>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.CsvFileWriterNew.AggiungiCampo(System.String,System.Int32)">
 <summary>
 Aggiunge campo verificando la lunghezza
 </summary>
 <param name="valore"></param>
 <param name="maxLen"></param>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.CsvFileWriterNew.Dispose">
 <summary>
 Esegue Finalizza() per scrivere dati non ancora salvati poi libera memoria
 </summary>
 <remarks></remarks>
</member>
<member name="T:SDS.CommonUtils.CsvFileWriterStrutturato">
 <summary>
 Classe per scrittura file CSV con base tabellare persistente in memoria
 </summary>
 <remarks></remarks>
</member>
<member name="P:SDS.CommonUtils.CsvFileWriterStrutturato.IsInTransaction">
 <summary>
 Indica se e' attiva la gestione transazionale
 </summary>
 <returns></returns>
</member>
<member name="M:SDS.CommonUtils.CsvFileWriterStrutturato.BeginTransaction">
 <summary>
 Avvia transazione
 </summary>
</member>
<member name="M:SDS.CommonUtils.CsvFileWriterStrutturato.CommitTransaction">
 <summary>
 Commit transazione (scrive dati)
 </summary>
</member>
<member name="M:SDS.CommonUtils.CsvFileWriterStrutturato.RollbackTransaction">
 <summary>
 Rollback transazione (scarta dati)
 </summary>
</member>
<member name="M:SDS.CommonUtils.CsvFileWriterStrutturato.transCheck(System.Boolean)">
 <summary>
 Verifica se transazione attiva
 </summary>
</member>
<member name="M:SDS.CommonUtils.CsvFileWriterStrutturato.transReset">
 <summary>
 Resetta transazione
 </summary>
</member>
<member name="M:SDS.CommonUtils.CsvFileWriterStrutturato.ensureRow">
 <summary>
 Assicura la valorizzazione della riga corrente
 </summary>
</member>
<member name="M:SDS.CommonUtils.CsvFileWriterStrutturato.WriteRow">
 <summary>
 Se ci sono campi nel buffer scrive il record ed azzera il buffer dei campi
 </summary>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.CsvFileWriterStrutturato.WriteEmptyRow">
 <summary>
 Scrive una riga vuota senza toccare il contenuto del buffer dei campi
 </summary>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.CsvFileWriterStrutturato.SetValue(System.String,System.String)">
 <summary>
 Aggiunge campo verificando la lunghezza
 </summary>
 <param name="colonna"></param>
 <param name="valore"></param>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.CsvFileWriterStrutturato.GetDataView">
 <summary>
 Ritorna struttura tabellare rappresentante il file
 </summary>
 <returns></returns>
</member>
<member name="M:SDS.CommonUtils.CsvFileWriterStrutturato.GetCurrentRowView">
 <summary>
 Ritorna record corrente
 </summary>
 <returns></returns>
</member>
<member name="M:SDS.CommonUtils.CsvFileWriterStrutturato.Dispose">
 <summary>
 Esegue Finalizza() per scrivere dati non ancora salvati poi libera memoria
 </summary>
 <remarks></remarks>
</member>
<member name="T:SDS.CommonUtils.FixedFileReader">
 <summary>
 Reader file posizionali
 </summary>
 <remarks></remarks>
</member>
<member name="F:SDS.CommonUtils.FixedFileReader.SiglaTipoRecordErrore">
 <summary>
 Imposta Sigla tipo record di errore - Default = ERR
 </summary>
 <remarks></remarks>
</member>
<member name="F:SDS.CommonUtils.FixedFileReader.CarattereTerminatore">
 <summary>
 Carattere terminatore se presente
 </summary>
 <remarks></remarks>
</member>
<member name="F:SDS.CommonUtils.FixedFileReader.ValidaLunghezzaConTerminatore">
 <summary>
 Verifica che l'ultimo campo del record sia il carattere terminatore specificato
 </summary>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.FixedFileReader.ReadRecord">
 <summary>
 Legge il record decodificandolo in una lista di campi Valori
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:SDS.CommonUtils.FixedFileReader.FileSchema">
 <summary>
 Definizione schema di lettura file
 </summary>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.FixedFileReader.FileSchema.AddRecordType(System.String,System.Int32,System.Int32,System.String)">
 <summary>
 Aggiunge una nuova definizione di tiporecord
 </summary>
 <param name="tipoRecord"></param>
 <param name="posStart"></param>
 <param name="len"></param>
 <param name="nomeCampo"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.FixedFileReader.FileSchema.AddRecordType(System.String,System.Int32,System.Int32,System.String,System.String)">
 <summary>
 Aggiunge una nuova definizione di tiporecord
 </summary>
 <param name="tipoRecord"></param>
 <param name="posStart"></param>
 <param name="len"></param>
 <param name="nomeCampo"></param>
 <param name="RegexValidator"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:SDS.CommonUtils.FixedFileReader.RecordDefinizione">
 <summary>
 Definizione di schema per il singolo Record
 </summary>
 <remarks></remarks>
</member>
<member name="T:SDS.CommonUtils.FixedFileReader.CampoDefinizione">
 <summary>
 Definizione di schema per il singolo campo
 </summary>
 <remarks></remarks>
</member>
<member name="T:SDS.CommonUtils.FixedFileReader.RecordValori">
 <summary>
 Record decodificato secondo lo schema dato
 </summary>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.FixedFileReader.CampoValore.GetAs``1">
 <summary>
  Valore del campo convertito in tipo richiesto
 </summary>
 <typeparam name="T"></typeparam>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.FixedFileReader.CampoValore.GetAsDateTime(System.String)">
 <summary>
 Valore del campo convertito in tipo date
 </summary>
 <param name="format"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.FixedFileReader.CampoValore.GetAsDateTime(System.String,System.Globalization.CultureInfo)">
 <summary>
 Valore del campo convertito in tipo date
 </summary>
 <param name="format"></param>
 <param name="culture"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:SDS.CommonUtils.FixedFileReader.eErrorCode">
 <summary>
 Costanti errori
 </summary>
 <remarks></remarks>
</member>
<member name="T:SDS.CommonUtils.ScriviFlussoTxt">
 <summary>
 Classe per scrittura file di testo con formati diversi da CSV
 </summary>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.ScriviFlussoTxt.GetNumRecordCorrente">
 <summary>
 Incrementa il contatore di records scritti e ritorna il valore ordinale del
 prossimo recordo che verrà scritto.
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:SDS.CommonUtils.Streams">
 <summary>
 Utility per la gestione degli stream generici
 </summary>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.Streams.Copia(System.IO.Stream,System.IO.Stream)">
 <summary>
 Copia il contenuto di uno stream su un altro stream
 </summary>
 <param name="input"></param>
 <param name="output"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:SDS.CommonUtils.IndirizzoSpedizione">
 <summary>
 Identifica le informazioni che interessano un Indirizzo di Spedizione
 </summary>
 <remarks></remarks>
</member>
<member name="T:SDS.CommonUtils.RecapitoPostale">
 <summary>
 Identifica le informazioni che 
 interessano un recapito postale
 </summary>
 <remarks></remarks>
</member>
<member name="T:SDS.CommonUtils.RawPrinterHelper">
 <summary>
 Classe per invio dati grezzi a stampanti: Stringhe, file di testo, PDF (se stampante riconosce PDF)
 </summary>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.RawPrinterHelper.SendBytesToPrinter(System.String,System.String,System.Byte[])">
 <summary>
 Invia array di bytes alla stampante
 </summary>
 <param name="szDocumentName"></param>
 <param name="szPrinterName"></param>
 <param name="bytes"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:SDS.CommonUtils.PosteSvcMail.Mailing">
<remarks/>
</member>
<member name="M:SDS.CommonUtils.PosteSvcMail.Mailing.#ctor">
<remarks/>
</member>
<member name="E:SDS.CommonUtils.PosteSvcMail.Mailing.QueueEmailCompleted">
<remarks/>
</member>
<member name="E:SDS.CommonUtils.PosteSvcMail.Mailing.ProcessQueueCompleted">
<remarks/>
</member>
<member name="E:SDS.CommonUtils.PosteSvcMail.Mailing.SendEmailCompleted">
<remarks/>
</member>
<member name="M:SDS.CommonUtils.PosteSvcMail.Mailing.QueueEmail(SDS.CommonUtils.PosteSvcMail.RequestEmailQueue)">
<remarks/>
</member>
<member name="M:SDS.CommonUtils.PosteSvcMail.Mailing.QueueEmailAsync(SDS.CommonUtils.PosteSvcMail.RequestEmailQueue)">
<remarks/>
</member>
<member name="M:SDS.CommonUtils.PosteSvcMail.Mailing.QueueEmailAsync(SDS.CommonUtils.PosteSvcMail.RequestEmailQueue,System.Object)">
<remarks/>
</member>
<member name="M:SDS.CommonUtils.PosteSvcMail.Mailing.ProcessQueue(SDS.CommonUtils.PosteSvcMail.RequestProcessQueue)">
<remarks/>
</member>
<member name="M:SDS.CommonUtils.PosteSvcMail.Mailing.ProcessQueueAsync(SDS.CommonUtils.PosteSvcMail.RequestProcessQueue)">
<remarks/>
</member>
<member name="M:SDS.CommonUtils.PosteSvcMail.Mailing.ProcessQueueAsync(SDS.CommonUtils.PosteSvcMail.RequestProcessQueue,System.Object)">
<remarks/>
</member>
<member name="M:SDS.CommonUtils.PosteSvcMail.Mailing.SendEmail(SDS.CommonUtils.PosteSvcMail.RequestEmailQueue)">
<remarks/>
</member>
<member name="M:SDS.CommonUtils.PosteSvcMail.Mailing.SendEmailAsync(SDS.CommonUtils.PosteSvcMail.RequestEmailQueue)">
<remarks/>
</member>
<member name="M:SDS.CommonUtils.PosteSvcMail.Mailing.SendEmailAsync(SDS.CommonUtils.PosteSvcMail.RequestEmailQueue,System.Object)">
<remarks/>
</member>
<member name="M:SDS.CommonUtils.PosteSvcMail.Mailing.CancelAsync(System.Object)">
<remarks/>
</member>
<member name="T:SDS.CommonUtils.PosteSvcMail.SdsAuthHeader">
<remarks/>
</member>
<member name="P:SDS.CommonUtils.PosteSvcMail.SdsAuthHeader.AuthKey">
<remarks/>
</member>
<member name="P:SDS.CommonUtils.PosteSvcMail.SdsAuthHeader.AnyAttr">
<remarks/>
</member>
<member name="T:SDS.CommonUtils.PosteSvcMail.ResponseExecInfo">
<remarks/>
</member>
<member name="P:SDS.CommonUtils.PosteSvcMail.ResponseExecInfo.Id">
<remarks/>
</member>
<member name="P:SDS.CommonUtils.PosteSvcMail.ResponseExecInfo.DateStart">
<remarks/>
</member>
<member name="P:SDS.CommonUtils.PosteSvcMail.ResponseExecInfo.DateEnd">
<remarks/>
</member>
<member name="T:SDS.CommonUtils.PosteSvcMail.ResponseMsg">
<remarks/>
</member>
<member name="P:SDS.CommonUtils.PosteSvcMail.ResponseMsg.Code">
<remarks/>
</member>
<member name="P:SDS.CommonUtils.PosteSvcMail.ResponseMsg.Text">
<remarks/>
</member>
<member name="P:SDS.CommonUtils.PosteSvcMail.ResponseMsg.Stack">
<remarks/>
</member>
<member name="P:SDS.CommonUtils.PosteSvcMail.ResponseMsg.Level">
<remarks/>
</member>
<member name="T:SDS.CommonUtils.PosteSvcMail.ResponseBase">
<remarks/>
</member>
<member name="P:SDS.CommonUtils.PosteSvcMail.ResponseBase.HasErrors">
<remarks/>
</member>
<member name="P:SDS.CommonUtils.PosteSvcMail.ResponseBase.HasWarnings">
<remarks/>
</member>
<member name="P:SDS.CommonUtils.PosteSvcMail.ResponseBase.Messages">
<remarks/>
</member>
<member name="P:SDS.CommonUtils.PosteSvcMail.ResponseBase.ExecInfo">
<remarks/>
</member>
<member name="T:SDS.CommonUtils.PosteSvcMail.ResponseEmailQueue">
<remarks/>
</member>
<member name="T:SDS.CommonUtils.PosteSvcMail.RequestBase">
<remarks/>
</member>
<member name="T:SDS.CommonUtils.PosteSvcMail.RequestProcessQueue">
<remarks/>
</member>
<member name="P:SDS.CommonUtils.PosteSvcMail.RequestProcessQueue.NumeroEmail">
<remarks/>
</member>
<member name="T:SDS.CommonUtils.PosteSvcMail.RequestEmailQueue">
<remarks/>
</member>
<member name="P:SDS.CommonUtils.PosteSvcMail.RequestEmailQueue.Da">
<remarks/>
</member>
<member name="P:SDS.CommonUtils.PosteSvcMail.RequestEmailQueue.A">
<remarks/>
</member>
<member name="P:SDS.CommonUtils.PosteSvcMail.RequestEmailQueue.Corpo">
<remarks/>
</member>
<member name="P:SDS.CommonUtils.PosteSvcMail.RequestEmailQueue.Cc">
<remarks/>
</member>
<member name="P:SDS.CommonUtils.PosteSvcMail.RequestEmailQueue.Ccn">
<remarks/>
</member>
<member name="P:SDS.CommonUtils.PosteSvcMail.RequestEmailQueue.Oggetto">
<remarks/>
</member>
<member name="P:SDS.CommonUtils.PosteSvcMail.RequestEmailQueue.CodDominio">
<remarks/>
</member>
<member name="P:SDS.CommonUtils.PosteSvcMail.RequestEmailQueue.DataSchedulazione">
<remarks/>
</member>
<member name="T:SDS.CommonUtils.PosteSvcMail.QueueEmailCompletedEventHandler">
<remarks/>
</member>
<member name="T:SDS.CommonUtils.PosteSvcMail.QueueEmailCompletedEventArgs">
<remarks/>
</member>
<member name="P:SDS.CommonUtils.PosteSvcMail.QueueEmailCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:SDS.CommonUtils.PosteSvcMail.ProcessQueueCompletedEventHandler">
<remarks/>
</member>
<member name="T:SDS.CommonUtils.PosteSvcMail.ProcessQueueCompletedEventArgs">
<remarks/>
</member>
<member name="P:SDS.CommonUtils.PosteSvcMail.ProcessQueueCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:SDS.CommonUtils.PosteSvcMail.SendEmailCompletedEventHandler">
<remarks/>
</member>
<member name="T:SDS.CommonUtils.PosteSvcMail.SendEmailCompletedEventArgs">
<remarks/>
</member>
<member name="P:SDS.CommonUtils.PosteSvcMail.SendEmailCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:SDS.CommonUtils.PosteSvcSms.Sms">
<remarks/>
</member>
<member name="M:SDS.CommonUtils.PosteSvcSms.Sms.#ctor">
<remarks/>
</member>
<member name="E:SDS.CommonUtils.PosteSvcSms.Sms.QueueSmsCompleted">
<remarks/>
</member>
<member name="E:SDS.CommonUtils.PosteSvcSms.Sms.ProcessQueueSmsCompleted">
<remarks/>
</member>
<member name="E:SDS.CommonUtils.PosteSvcSms.Sms.SendSmsCompleted">
<remarks/>
</member>
<member name="M:SDS.CommonUtils.PosteSvcSms.Sms.QueueSms(SDS.CommonUtils.PosteSvcSms.RequestSmsQueue)">
<remarks/>
</member>
<member name="M:SDS.CommonUtils.PosteSvcSms.Sms.QueueSmsAsync(SDS.CommonUtils.PosteSvcSms.RequestSmsQueue)">
<remarks/>
</member>
<member name="M:SDS.CommonUtils.PosteSvcSms.Sms.QueueSmsAsync(SDS.CommonUtils.PosteSvcSms.RequestSmsQueue,System.Object)">
<remarks/>
</member>
<member name="M:SDS.CommonUtils.PosteSvcSms.Sms.ProcessQueueSms(SDS.CommonUtils.PosteSvcSms.RequestProcessQueue)">
<remarks/>
</member>
<member name="M:SDS.CommonUtils.PosteSvcSms.Sms.ProcessQueueSmsAsync(SDS.CommonUtils.PosteSvcSms.RequestProcessQueue)">
<remarks/>
</member>
<member name="M:SDS.CommonUtils.PosteSvcSms.Sms.ProcessQueueSmsAsync(SDS.CommonUtils.PosteSvcSms.RequestProcessQueue,System.Object)">
<remarks/>
</member>
<member name="M:SDS.CommonUtils.PosteSvcSms.Sms.SendSms(SDS.CommonUtils.PosteSvcSms.RequestSmsQueue)">
<remarks/>
</member>
<member name="M:SDS.CommonUtils.PosteSvcSms.Sms.SendSmsAsync(SDS.CommonUtils.PosteSvcSms.RequestSmsQueue)">
<remarks/>
</member>
<member name="M:SDS.CommonUtils.PosteSvcSms.Sms.SendSmsAsync(SDS.CommonUtils.PosteSvcSms.RequestSmsQueue,System.Object)">
<remarks/>
</member>
<member name="M:SDS.CommonUtils.PosteSvcSms.Sms.CancelAsync(System.Object)">
<remarks/>
</member>
<member name="T:SDS.CommonUtils.PosteSvcSms.SdsAuthHeader">
<remarks/>
</member>
<member name="P:SDS.CommonUtils.PosteSvcSms.SdsAuthHeader.AuthKey">
<remarks/>
</member>
<member name="P:SDS.CommonUtils.PosteSvcSms.SdsAuthHeader.AnyAttr">
<remarks/>
</member>
<member name="T:SDS.CommonUtils.PosteSvcSms.ResponseExecInfo">
<remarks/>
</member>
<member name="P:SDS.CommonUtils.PosteSvcSms.ResponseExecInfo.Id">
<remarks/>
</member>
<member name="P:SDS.CommonUtils.PosteSvcSms.ResponseExecInfo.DateStart">
<remarks/>
</member>
<member name="P:SDS.CommonUtils.PosteSvcSms.ResponseExecInfo.DateEnd">
<remarks/>
</member>
<member name="T:SDS.CommonUtils.PosteSvcSms.ResponseMsg">
<remarks/>
</member>
<member name="P:SDS.CommonUtils.PosteSvcSms.ResponseMsg.Code">
<remarks/>
</member>
<member name="P:SDS.CommonUtils.PosteSvcSms.ResponseMsg.Text">
<remarks/>
</member>
<member name="P:SDS.CommonUtils.PosteSvcSms.ResponseMsg.Stack">
<remarks/>
</member>
<member name="P:SDS.CommonUtils.PosteSvcSms.ResponseMsg.Level">
<remarks/>
</member>
<member name="T:SDS.CommonUtils.PosteSvcSms.ResponseBase">
<remarks/>
</member>
<member name="P:SDS.CommonUtils.PosteSvcSms.ResponseBase.HasErrors">
<remarks/>
</member>
<member name="P:SDS.CommonUtils.PosteSvcSms.ResponseBase.HasWarnings">
<remarks/>
</member>
<member name="P:SDS.CommonUtils.PosteSvcSms.ResponseBase.Messages">
<remarks/>
</member>
<member name="P:SDS.CommonUtils.PosteSvcSms.ResponseBase.ExecInfo">
<remarks/>
</member>
<member name="T:SDS.CommonUtils.PosteSvcSms.ResponseSmsQueue">
<remarks/>
</member>
<member name="T:SDS.CommonUtils.PosteSvcSms.RequestBase">
<remarks/>
</member>
<member name="T:SDS.CommonUtils.PosteSvcSms.RequestProcessQueue">
<remarks/>
</member>
<member name="P:SDS.CommonUtils.PosteSvcSms.RequestProcessQueue.NumeroSms">
<remarks/>
</member>
<member name="T:SDS.CommonUtils.PosteSvcSms.RequestSmsQueue">
<remarks/>
</member>
<member name="P:SDS.CommonUtils.PosteSvcSms.RequestSmsQueue.Da">
<remarks/>
</member>
<member name="P:SDS.CommonUtils.PosteSvcSms.RequestSmsQueue.A">
<remarks/>
</member>
<member name="P:SDS.CommonUtils.PosteSvcSms.RequestSmsQueue.Corpo">
<remarks/>
</member>
<member name="P:SDS.CommonUtils.PosteSvcSms.RequestSmsQueue.CodDominio">
<remarks/>
</member>
<member name="P:SDS.CommonUtils.PosteSvcSms.RequestSmsQueue.DataSchedulazione">
<remarks/>
</member>
<member name="T:SDS.CommonUtils.PosteSvcSms.QueueSmsCompletedEventHandler">
<remarks/>
</member>
<member name="T:SDS.CommonUtils.PosteSvcSms.QueueSmsCompletedEventArgs">
<remarks/>
</member>
<member name="P:SDS.CommonUtils.PosteSvcSms.QueueSmsCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:SDS.CommonUtils.PosteSvcSms.ProcessQueueSmsCompletedEventHandler">
<remarks/>
</member>
<member name="T:SDS.CommonUtils.PosteSvcSms.ProcessQueueSmsCompletedEventArgs">
<remarks/>
</member>
<member name="P:SDS.CommonUtils.PosteSvcSms.ProcessQueueSmsCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:SDS.CommonUtils.PosteSvcSms.SendSmsCompletedEventHandler">
<remarks/>
</member>
<member name="T:SDS.CommonUtils.PosteSvcSms.SendSmsCompletedEventArgs">
<remarks/>
</member>
<member name="P:SDS.CommonUtils.PosteSvcSms.SendSmsCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:SDS.CommonUtils.Asp">
 <summary>
 Funzioni comuni per applicazioni ASP
 </summary>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.Asp.WebApplicationPath">
 <summary>
 Ritorna il path fisico della Home
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.Asp.MapVirtualPath(System.String)">
 <summary>
 Dato un percorso virtuale (es. ~/templates) ritorna il percorso fisico completo
 Se viene passato un percorso fisico, lo ritorna senza toccarlo
 </summary>
 <param name="virtualPath"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.Asp.SetSessionData(System.String,System.Object)">
 <summary>
 Imposta Dati Di Sessione
 </summary>
 <param name="chiave"></param>
 <param name="valore"></param>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.Asp.GetSessionData(System.String,System.Object)">
 <summary>
 Ritorna dati salvati in sessione oppure un valore di default
 </summary>
 <param name="chiave"></param>
 <param name="valoreDefault"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.Asp.SetCookieData(System.String,System.String,System.String)">
 <summary>
 Imposta valore per cookie
 </summary>
 <param name="chiave"></param>
 <param name="valore"></param>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.Asp.GetCookieData(System.String,System.String,System.String)">
 <summary>
 Ritorna valore di campo cookie
 </summary>
 <param name="nomeCookie"></param>
 <param name="chiave"></param>
 <param name="valoreDefault"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:SDS.CommonUtils.Email">
 <summary>
 Funzioni comuni per l'invio di email
 </summary>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.Email.#ctor">
 <summary>
 Costruttore base che utilizza i dati smtp presenti nel config
 </summary>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.Email.#ctor(System.String,System.Int32,System.String,System.String)">
 <summary>
 Inizializza classe con dati smtp specifici
 </summary>
 <param name="smtpHost"></param>
 <param name="smtpPort"></param>
 <param name="smtpUser"></param>
 <param name="smtpPass"></param>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.Email.IsValidEmail(System.String)">
 <summary>
 Validazione formale email
 </summary>
 <param name="Email"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.Email.Send(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
 <summary>
 Routine comune di invio email.
 La parte di configurazione smtp è quella standard .Net 2.0
 nel tag <system.net><mailSettings>...</mailSettings></system.net>
 </summary>
 <param name="toAddr"></param>
 <param name="subject"></param>
 <param name="body"></param>
 <param name="attachments"></param>
 <param name="headers"></param>
 <remarks></remarks>
</member>
<member name="T:SDS.CommonUtils.Ftp">
 <summary>
 Funzioni per l'utilizzo del protocollo FTP
 </summary>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.Ftp.CreateFtpRequest(System.String,System.String,System.String,System.Boolean)">
 <summary>
 Crea la richiesta Ftp
 </summary>
 <param name="url"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.Ftp.CreateFolder(System.String,System.String,System.String)">
 <summary>
 Crea una directory su un server FTP
 </summary>
 <param name="url">
 url del tipo ftp://host:port/path
 </param>
 <param name="user"></param>
 <param name="pass"></param>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.Ftp.DeleteEmptyFolder(System.String,System.String,System.String)">
 <summary>
 Elimina una cartella VUOTA
 </summary>
 <param name="url"></param>
 <param name="user"></param>
 <param name="pass"></param>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.Ftp.DeleteFile(System.String,System.String,System.String)">
 <summary>
 Elimina file singolo
 </summary>
 <param name="url"></param>
 <param name="user"></param>
 <param name="pass"></param>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.Ftp.DeleteFolderTree(System.String,System.String,System.String)">
 <summary>
 Elimina la cartella e tutto il suo contenuto (sottocartelle comprese)
 </summary>
 <param name="url"></param>
 <param name="user"></param>
 <param name="pass"></param>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.Ftp.UploadFile(System.String,System.String,System.String,System.String)">
 <summary>
 Esegue Upload File
 </summary>
 <param name="url"></param>
 <param name="localFile"></param>
 <param name="user"></param>
 <param name="pass"></param>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.Ftp.DownloadFile(System.String,System.String,System.String,System.String)">
 <summary>
 Scarica file da server ftp
 </summary>
 <param name="url"></param>
 <param name="localFile"></param>
 <param name="user"></param>
 <param name="pass"></param>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.Ftp.GetList(System.String,System.String,System.String)">
 <summary>
 Elenco contenuto directory
 </summary>
 <param name="url"></param>
 <param name="user"></param>
 <param name="pass"></param>
 <remarks></remarks>
</member>
<member name="T:SDS.CommonUtils.Http">
 <summary>
 Funzioni comuni protocollo HTTP
 </summary>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.Http.DownloadFile(System.String,System.String)">
 <summary>
 Esegue il download di un file sul path specificato
 </summary>
 <param name="url"></param>
 <param name="path"></param>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.Http.UploadFile(System.String,System.String)">
 <summary>
 Esegue l'upload del file specificato sull'url
 </summary>
 <param name="url"></param>
 <param name="path"></param>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.Http.WsCall(System.String,System.String,System.String,System.Int64)">
 <summary>
 Esegue chiamata a WS tramite WebClient Post [Timeout default= 5 ore]
 </summary>
 <param name="WsUrl"></param>
 <param name="WsMethod"></param>
 <param name="WsXmlns"></param>
 <returns></returns>
</member>
<member name="T:SDS.CommonUtils.Ip">
 <summary>
 Utilità per indirizzi IP
 </summary>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.Ip.Check(System.String,System.String)">
 <summary>
 Indica se l'ipAddressIn fa parte della famiglia di ipAddressMask
 </summary>
 <param name="ipAddressIn"></param>
 <param name="ipAddressMask"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:SDS.CommonUtils.NavManager">
 <summary>
 Classe per la gestione della navigazione controllata
 </summary>
 <remarks></remarks>
</member>
<member name="T:SDS.CommonUtils.NavManager.NavItem">
 <summary>
 Oggetto Navigazione
 </summary>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.NavManager.NavItem.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
 <summary>
 Serializza
 </summary>
 <param name="info"></param>
 <param name="context"></param>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.NavManager.NavItem.SetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
 <summary>
 Deserializza
 </summary>
 <param name="info"></param>
 <param name="context"></param>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.NavManager.RegisterAspControl(System.Web.UI.Control)">
 <summary>
 Consente di registrare il valore del controllo in
 modo da essere ripristinato ad un accesso successivo
 </summary>
 <param name="control"></param>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.NavManager.RegisterAspControl(System.Web.UI.Control,System.String)">
 <summary>
 Consente di registrare una proprietà del controllo da salvare/reimpostare nella navigazione
 </summary>
 <param name="control"></param>
 <param name="propertyName"></param>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.NavManager.SetOption(System.String,System.String)">
 <summary>
 Consente di salvare coppie di chiavi valore
 </summary>
 <param name="name"></param>
 <param name="value"></param>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.NavManager.GetOption(System.String)">
 <summary>
 Ritorna un valore precedentemente salvato altrimenti una stringa vuota
 </summary>
 <param name="name"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.NavManager.InitNavManager">
 <summary>
 Inizializza Navigatore
 </summary>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.NavManager.CreatePageKey(System.String)">
 <summary>
 Dato Un Url ritorna la key univoca che lo rappresenta
 </summary>
 <param name="url"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.NavManager.SetNavToUsed">
 <summary>
 Imposta flag di utilizzo navigatore avanti
 </summary>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.NavManager.UnsetNavToUsed">
 <summary>
 Resetta flag di utilizzo navigatore avanti
 </summary>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.NavManager.SetNavFromUsed">
 <summary>
 Imposta flag di navigatore indietro utilizzato
 </summary>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.NavManager.UnsetNavFromUsed">
 <summary>
 Resetta flag di utilizzo indietro navigatore
 </summary>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.NavManager.IsNavToUsed">
 <summary>
 Verifica se utilizzato navigatore avanti 
 </summary>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.NavManager.IsNavFromUsed">
 <summary>
 Verifica se utilizzato navigatore indietro
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.NavManager.ReNewNav">
 <summary>
 Distrugge navigatore e lo ricrea vuoto
 </summary>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.NavManager.SaveAspControlsValues(System.Object,System.EventArgs)">
 <summary>
 Salva il valore dei controlli Asp richiesti
 </summary>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.NavManager.RestoreAspControlsValues(System.Object,System.EventArgs)">
 <summary>
 Ripristina i dati dei controlli associati
 </summary>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.NavManager.FindControlRecursive(System.Web.UI.Control,System.String)">
 <summary>
 Cerca un controllo con un certo ID
 </summary>
 <param name="Root"></param>
 <param name="Id"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.NavManager.NavGoBack">
 <summary>
 Torna alla pagina precedente
 </summary>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.NavManager.NavGoBack(System.Int32)">
 <summary>
 Torna ad una pagina precedente
 </summary>
 <param name="steps"></param>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.NavManager.NavRedirectTo(System.String)">
 <summary>
 Naviga verso altra pagina mantenendo lo stato della navigazione
 </summary>
 <param name="url"></param>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.NavManager.NoNavRedirectTo(System.String)">
 <summary>
 Naviga verso altra pagina senza mantenenere lo stato della navigazione
 </summary>
 <param name="url"></param>
 <remarks></remarks>
</member>
<member name="T:SDS.CommonUtils.FileFrecciaParser">
 <summary>
 Classe Da Utilizzare per il Parsing di un file BAncario di Riconciliazione Bollettini Freccia
 </summary>
 <remarks></remarks>
</member>
<member name="T:SDS.CommonUtils.FileFrecciaParser.Bollettino">
 <summary>
 Struttura contenente i dati del singolo bollettino
 </summary>
 <remarks></remarks>
</member>
<member name="P:SDS.CommonUtils.FileFrecciaParser.Item(System.Int32)">
 <summary>
 Accesso all'oggetto i-esimo
 </summary>
 <param name="index"></param>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SDS.CommonUtils.FileFrecciaParser.Count">
 <summary>
 Numero Bollettini
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SDS.CommonUtils.FileFrecciaParser.InputFile">
 <summary>
 File in input
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.FileFrecciaParser.GetEnumerator">
 <summary>
 Enumeratore
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.FileFrecciaParser.ParseFile">
 <summary>
 Esegue il parsing del file
 </summary>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.FileFrecciaParser.Parse(System.String)">
 <summary>
 Dato il path di un file di riconciliazione freccia ritorna 
 l'oggetto FileBBF istanziato con il parsing già effettuato
 </summary>
 <param name="inputFile"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:SDS.CommonUtils.FileRidParser">
 <summary>
 Classe Da Utilizzare per il Parsing di un file Bancario di Riconciliazione RID Negativi
 </summary>
 <remarks></remarks>
</member>
<member name="T:SDS.CommonUtils.FileRidParser.Rid">
 <summary>
 Struttura contenente i dati del singolo bollettino
 </summary>
 <remarks></remarks>
</member>
<member name="P:SDS.CommonUtils.FileRidParser.Item(System.Int32)">
 <summary>
 Accesso all'oggetto i-esimo
 </summary>
 <param name="index"></param>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SDS.CommonUtils.FileRidParser.Count">
 <summary>
 Numero Bollettini
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SDS.CommonUtils.FileRidParser.InputFile">
 <summary>
 File in input
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.FileRidParser.GetEnumerator">
 <summary>
 Enumeratore
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.FileRidParser.ParseFile">
 <summary>
 Esegue il parsing del file
 </summary>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.FileRidParser.Parse(System.String)">
 <summary>
 Dato il path di un file di riconciliazione freccia ritorna 
 l'oggetto FileBBF istanziato con il parsing già effettuato
 </summary>
 <param name="inputFile"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:SDS.CommonUtils.Security">
 <summary>
 Metodi per la sicurezza dei dati
 </summary>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.Security.EncryptTripleDES(System.String)">
 <summary>
 Encrypt di una stringacon valori di default con algoritmo TripleDES
 </summary>
 <param name="value"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.Security.CreateKeyDataFromText(System.String,System.Int32,System.Int32,System.Int32)">
 <summary>
 Crea una chiave per algoritmi di lunghezza specificata
 </summary>
 <param name="value"></param>
 <param name="keySize"></param>
 <param name="saltSize"></param>
 <param name="iterations"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.Security.EncryptData(System.Byte[],System.Byte[],System.Security.Cryptography.SymmetricAlgorithm,System.Byte[])">
 <summary>
 Routine generica di crypt dati con Algoritmo Simmetrico
 (Rijandel, TripleDES, AES)
 </summary>
 <param name="IV"></param>
 <param name="KEY"></param>
 <param name="algo"></param>
 <param name="dataBuffer"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.Security.EncryptString(System.String,System.String,System.String,System.Int32,System.Int32,System.Security.Cryptography.SymmetricAlgorithm)">
 <summary>
 Routine generica di encrypt stringa
 </summary>
 <param name="sValue"></param>
 <param name="sKey"></param>
 <param name="sIV"></param>
 <param name="iSaltLen"></param>
 <param name="iIterations"></param>
 <param name="algo"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.Security.DencryptData(System.Byte[],System.Byte[],System.Security.Cryptography.SymmetricAlgorithm,System.Byte[])">
 <summary>
 Routine generica di decrypt dati con algoritmo simmetrico
 (Rijandel, TripleDES, AES)
 </summary>
 <param name="IV"></param>
 <param name="KEY"></param>
 <param name="algo"></param>
 <param name="dataBuffer"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:SDS.CommonUtils.CsvFileReader">
 <summary>
 Classe per la lettura di file CSV
 </summary>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.CsvFileReader.Read">
 <summary>
 Legge il contenuto del file e ritorna un datatable che lo rappresenta
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.CsvFileReader.createColumnsFromFields(System.Data.DataTable,System.String[])">
 <summary>
 Dato un record, crea la struttura di colonne
 </summary>
 <param name="tab"></param>
 <param name="fields"></param>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.CsvFileReader.addFieldsToTable(System.Data.DataTable,System.String[])">
 <summary>
 Aggiunge un nuovo record alla tabella a partire dai campi forniti
 </summary>
 <param name="tab"></param>
 <param name="fields"></param>
 <remarks></remarks>
</member>
<member name="T:SDS.CommonUtils.CsvFileWriter">
 <summary>
 Classe per scrittura file CSV
 </summary>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.CsvFileWriter.ScriviRecord">
 <summary>
 Se ci sono campi nel buffer scrive il record ed azzera il buffer dei campi
 </summary>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.CsvFileWriter.ScriviRecordVuoto">
 <summary>
 Scrive una riga vuota senza toccare il contenuto del buffer dei campi
 </summary>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.CsvFileWriter.AggiungiCampo(System.String)">
 <summary>
 Aggiunge campo senza verificare la lunghezza
 </summary>
 <param name="valore"></param>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.CsvFileWriter.AggiungiCampo(System.String,System.Int32)">
 <summary>
 Aggiunge campo verificando la lunghezza
 </summary>
 <param name="valore"></param>
 <param name="maxLen"></param>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.CsvFileWriter.Dispose">
 <summary>
 Esegue Finalizza() per scrivere dati non ancora salvati poi libera memoria
 </summary>
 <remarks></remarks>
</member>
<member name="T:SDS.CommonUtils.DateUT">
 <summary>
 Funzioni generiche per Date
 </summary>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.DateUT.AttivaFestivitaProv(System.String)">
 <summary>
 Include festività specifiche provinciali (al momento solo RM e MI)
 Operazione da effettuare una volta a caricamento applicazione.
 Chiamate successive non provocano alcun risultato
 </summary>
 <param name="codProvincia"></param>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.DateUT.ParseData(System.String,System.String)">
 <summary>
  Converte una stringa in data secondo il formato dd/MM/yyyy con nome campo fornito
 </summary>
 <param name="sDataIn"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.DateUT.ParseData(System.String)">
 <summary>
  Converte una stringa in data secondo il formato dd/MM/yyyy con nome campo generico 'data'
 </summary>
 <param name="sDataIn"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.DateUT.ParseData(System.String,System.String,System.String)">
 <summary>
 Converte una stringa in data secondo il formato specificato e con nome campo personalizzabile
 </summary>
 <param name="sDataIn"></param>
 <param name="sFormatoIn"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.DateUT.ParseDataNull(System.String,System.String)">
 <summary>
 Converte una stringa in data secondo il formato specificato: se conversione in errore torna Date.MinValue
 </summary>
 <param name="sDataIn"></param>
 <param name="sFormatoIn"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.DateUT.ParseDataNull(System.String)">
 <summary>
 Converte una stringa in data secondo il formato dd/MM/yyyy: se conversione in errore torna Date.MinValue
 </summary>
 <param name="sDataIn"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.DateUT.AddMeseFine(System.DateTime,System.Int32)">
 <summary>
 Aggiunge mese alla data fornita e ritorna la fine del mese trovato
 </summary>
 <param name="dataIn"></param>
 <param name="numMonths"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.DateUT.AddGiorniLavorativi(System.DateTime,System.Int32)">
 <summary>
 Aggiunge un numero di giorni lavorativi alla data specificata. Il sabato e' inteso come giorno NON lavorativo
 </summary>
 <param name="dataIn"></param>
 <param name="numGiorni"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.DateUT.AddGiorniLavorativi(System.DateTime,System.Int32,System.Boolean)">
 <summary>
 Calcola una data aggiungendo giorni tenendo conto di Domeniche e delle feste standard. Il sabato può essere considerato festivo (true) o lavorativo (false)
 </summary>
 <param name="dataIn"></param>
 <param name="numGiorni"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.DateUT.IsFestivo(System.DateTime)">
 <summary>
 Verifica se una data risulta festiva. Il sabato e'inteso come festivo (NON LAVORATIVO).
 </summary>
 <param name="dataIn"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.DateUT.IsFestivo(System.DateTime,System.Boolean)">
 <summary>
 Verifica se una data risulta festiva. Opzionalmente si puo' specificare come considerare il sabato
 </summary>
 <param name="dataIn"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.DateUT.CalcolaEta(System.DateTime,System.DateTime)">
 <summary>
 Calcola l'età in anni partendo dalla data di nascita fino alla data di calcolo
 </summary>
 <param name="dataNascita"></param>
 <param name="dataCalcolo"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.DateUT.CalcolaPasqua(System.Int32)">
 <summary>
 Calcola Il giorno di Pasqua
 </summary>
 <param name="annoIn"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.DateUT.CalcolaPrimoGiornoLavorativo(System.DateTime,System.Boolean)">
 <summary>
 Calcola primo giorno lavorativo alla data di riferimento. Se la data di riferimento è Lavoraiva restituisce la stessa data. Il sabato può essere considerato festivo (true) o lavorativo (false)
 </summary>
 <param name="dataRif"></param>
 <param name="sabatoNonLavorativo"></param>
 <returns></returns>
</member>
<member name="M:SDS.CommonUtils.DateUT.CalcolaGiorniLavorativi(System.DateTime,System.DateTime,System.Boolean)">
 <summary>
 calcola il numero di giorni lavorativi tra due date
 il parametro sabatoNonLavorativo = True indica che la settimana consta di 5 giorni lavorativi
 l'intervallo mimimo è 0 giorni: un evento che inizia e finisce lo stesso giorno lavorativo restituisce 0
 </summary>
 <param name="dataInizio"></param>
 <param name="dataFine"></param>
 <param name="sabatoNonLavorativo"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.DateUT.IsBetween(System.DateTime,System.DateTime,System.DateTime)">
 <summary>
 Verifica se una data e' compresa in un intervallo
 </summary>
 <param name="dataIn"></param>
 <param name="dataDa"></param>
 <param name="dataA"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.DateUT.IsSovrapposte(System.DateTime,System.DateTime,System.DateTime,System.DateTime)">
 <summary>
 Indica se due intervalli di date sono sovrapposti
 </summary>
 <param name="data1Inizio"></param>
 <param name="Data1Fine"></param>
 <param name="data2Inizio"></param>
 <param name="data2Fine"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.DateUT.IsContigue(System.DateTime,System.DateTime,System.DateTime,System.DateTime)">
 <summary>
 Indica se due intervalli di date sono contigui (fine di uno = inizio dell'altro)
 </summary>
 <param name="data1Inizio"></param>
 <param name="Data1Fine"></param>
 <param name="data2Inizio"></param>
 <param name="data2Fine"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.DateUT.MinData(System.DateTime[])">
 <summary>
 Ritorna la data minima tra quelle presenti in elenco (minimo 2)
 </summary>
 <param name="dates"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.DateUT.MaxData(System.DateTime[])">
 <summary>
 Ritorna data massima tra quelle presenti in elenco (minimo 2)
 </summary>
 <param name="dates"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.DateUT.GetSovrapposizione(System.DateTime,System.DateTime,System.DateTime,System.DateTime)">
 <summary>
 Ritorna timespan di sovrapposizione tra due intervalli di date
 </summary>
 <param name="data1Inizio"></param>
 <param name="Data1Fine"></param>
 <param name="data2Inizio"></param>
 <param name="data2Fine"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.DateUT.GetSovrapposizioneFeriali(System.DateTime,System.DateTime,System.DateTime,System.DateTime)">
 <summary>
  Ritorna timespan di sovrapposizione tra due intervalli di date senza considerare le festività
 </summary>
 <param name="data1Inizio"></param>
 <param name="Data1Fine"></param>
 <param name="data2Inizio"></param>
 <param name="data2Fine"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.DateUT.GetDataFineMese(System.DateTime)">
 <summary>
 Ritorna la data di fine mese rispetto alla data fornita
 </summary>
 <param name="dataIn"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.DateUT.GetDataInizioMese(System.DateTime)">
 <summary>
 Ritorna data inizio mese
 </summary>
 <param name="dataIn"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.DateUT.ToDateStringIT(System.DateTime)">
 <summary>
 Ritorna data formattata come dd/MM/yyyy
 </summary>
 <param name="dataIn"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.DateUT.ToDateStringEmptyIT(System.DateTime)">
 <summary>
 Ritorna data formattata come dd/MM/yyyy, se data=minvalue allora torna stringa vuota
 </summary>
 <param name="dataIn"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.DateUT.ToDateTimeStringIT(System.DateTime)">
 <summary>
 Ritorna data/ora formattata come dd/MM/yyyy HH:mm
 </summary>
 <param name="dataIn"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.DateUT.ToDateTimeStringEmptyIT(System.DateTime)">
 <summary>
 Ritorna data/ora formattata come dd/MM/yyyy HH:mm, se data = minvalue ritorna stringa vuota
 </summary>
 <param name="dataIn"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.DateUT.ToTimeStringIT(System.DateTime)">
 <summary>
 Ritorna ora formattata come HH:ss
 </summary>
 <param name="dataIn"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.DateUT.ToDataEstesaStringIT(System.DateTime)">
 <summary>
 Ritorna la data in formato testuale per essere utilizzata nelle lettere.
 Il formato è: gg mese-parlante aaaa
 </summary>
 <param name="dataIn"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.DateUT.GeneraIntervalliDateFromEnumerable(System.Collections.Generic.IEnumerable{System.DateTime})">
 <summary>
 Genera intervallo date da enumerable di date
 </summary>
 <param name="dates"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.DateUT.GeneraIntervalliDate(System.DateTime[])">
 <summary>
 Dato un array di date (anche non in ordine), viene generato un elenco di intervalli sequenziali
 </summary>
 <param name="dates"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:SDS.CommonUtils.DateUT.IntervalloDate">
 <summary>
 Classe che identifica un intervallo di date
 </summary>
 <remarks></remarks>
</member>
<member name="T:SDS.CommonUtils.DateUT.ListaIntervalliDate">
 <summary>
 Elenco di intervalli date
 </summary>
 <remarks></remarks>
</member>
<member name="T:SDS.CommonUtils.Iban">
 <summary>
 Classe contenente funzioni generiche per gestione
 codice IBAN
 </summary>
 <remarks></remarks>
</member>
<member name="P:SDS.CommonUtils.Iban.IsItaliano">
 <summary>
 Indica se l'iban e' italiano
 </summary>
 <returns></returns>
</member>
<member name="P:SDS.CommonUtils.Iban.IsStraniero">
 <summary>
 Indica se l'iban fornito e' straniero
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SDS.CommonUtils.Iban.IsCompleto">
 <summary>
 Indica se l'iban fornito e' della lunghezza prevista
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SDS.CommonUtils.Iban.InfoPaese">
 <summary>
 Informazioni relative al paese dell'iban
 </summary>
 <returns></returns>
</member>
<member name="M:SDS.CommonUtils.Iban.#ctor(System.String)">
 <summary>
 Valorizza Iban partendo da stringa iban completa
 </summary>
 <param name="ibanCompleto"></param>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.Iban.#ctor(System.String,System.String,System.String,System.String,System.String,System.String)">
 <summary>
 Valorizza iban partendo da forma decomposta
 </summary>
 <param name="codicePaese"></param>
 <param name="checkDigit"></param>
 <param name="codiceControllo"></param>
 <param name="codiceBanca"></param>
 <param name="codiceSportello"></param>
 <param name="numeroConto"></param>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.Iban.ValidateFormalNoException">
 <summary>
 Esegue validazione formale in base al paese dell'iban 
 </summary>
 <returns></returns>
</member>
<member name="M:SDS.CommonUtils.Iban.ValidateFormal">
 <summary>
 Esegue validazione formale in base al paese dell'iban
 </summary>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.Iban.GetIbanFilledWith(System.Char)">
 <summary>
 Ritorna l'iban specificato e, se incompleto, riempito alla lunghezza preivista con il carattere fornito
 </summary>
 <param name="c"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.Iban.CheckIbanCheckDigit(System.String)">
 <summary>
 Verifica la validita' del check digit
 </summary>
 <param name="Iban"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="F:SDS.CommonUtils.Iban._INFO_PAESE">
 <summary>
 Contiene le informazioni per gli iban dei vari paesi
 </summary>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.Iban.#cctor">
 <summary>
 Costruttore statico che inizializza le informazioni sui paesi
 </summary>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.Iban.CaricaCodiciPaese">
 <summary>
 Esegue caricamento codici paese
 </summary>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.Iban.ToPaperFormat(System.String)">
 <summary>
 Dato un iban completo (es IT01A0123405678000000000001)
 ritorna la corrispondente versione a quartetti (es IT01 A012 3405 6780 0000 0000 001)
 </summary>
 <param name="ibanCompleto"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.Iban.FromPaperFormat(System.String)">
 <summary>
 Dato un iban in formato Paper, ritorna il corrispondente formato compatto
 (es IT01 A012 3405 6780 0000 0000 001 => IT01A0123405678000000000001)
 </summary>
 <param name="ibanPaperFormat"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.Iban.calcolaCinIT(System.String)">
 <summary>
 Calcola il cin in base all'algoritmo italiano
 </summary>
 <param name="abi_cab_cc"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.Iban.ConvertiIBAN(System.String)">
 <summary>
 Dato un IBAN converte le Letttere in numeri in base alla tabella di conversione secondo cui: A=10; B=11; C=12; D=13 .....
 </summary>
 <param name="IBAN"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.Iban.Modulo97(System.String)">
 <summary>
 Restituisce il MOD 97-10 (Modulo 97 in base 10) di un numero passato come stringa
 </summary>
 <param name="numero"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.Numeri.DecimalFromStringIT(System.String)">
 <summary>
 Converte una stringa con formato n[,n] in numero decimale
 </summary>
 <param name="decimalStr"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.Numeri.DecimalFromStringUNIV(System.String)">
 <summary>
 Ritorna decimale partendo da una formattazione di tipo universale
 es. 1,000.00
 </summary>
 <param name="decimalStr"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.Numeri.DecimalToStringIT(System.Decimal)">
 <summary>
 Ritorna una stringa italiana interpretazione numeri decimali
 es. 1.000,00 => 1000,00
 </summary>
 <param name="value"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.Numeri.DecimalToStringUNIV(System.Decimal)">
 <summary>
 Ritorna una stringa universale di interpretazione numeri decimali
 es. 1.000,00 => 1000.00
 </summary>
 <param name="value"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:SDS.CommonUtils.Files">
 <summary>
 Classe con metodi comuni per l'utilizzo di file
 </summary>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.Files.AppendFileLine(System.String,System.String,System.Text.Encoding)">
 <summary>
 Scrive riga di testo su file
 </summary>
 <param name="filePath"></param>
 <param name="text"></param>
 <param name="enc"></param>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.Files.AppendFileLineUTF8(System.String,System.String)">
 <summary>
 Accoda riga di testo UTF8 a file (ThreadSafe)
 </summary>
 <param name="filePath"></param>
 <param name="text"></param>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.Files.AppendFileLineASCII(System.String,System.String)">
 <summary>
 Accoda riga di testo ASCII a file (ThreadSafe)
 </summary>
 <param name="filePath"></param>
 <param name="text"></param>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.Files.ScriviBufferSuFile(System.Byte[],System.String)">
 <summary>
 Scrive un array di byte su file
 </summary>
 <param name="buffer"></param>
 <param name="filePath"></param>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.Files.ScriviStreamSuFile(System.IO.Stream,System.String)">
 <summary>
 Scrive lo stream in input sul path fornito con lettura a blocchi di 32K
 </summary>
 <param name="streamData"></param>
 <param name="filePath"></param>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.Files.LeggiFileSuBuffer(System.String)">
 <summary>
 Legge il contenuto di un file e ritorna il buffer
 </summary>
 <param name="filePath"></param>
 <returns></returns>
 <remarks></remarks>filePath
</member>
<member name="M:SDS.CommonUtils.Files.CleanDirectory(System.String,System.String,System.DateTime,System.Boolean,System.Boolean)">
 <summary>
 Pulisce i file in base a pattern e data di scadenza
 </summary>
 <param name="dir"></param>
 <param name="pattern"></param>
 <param name="expireDate"></param>
 <param name="includeSubDir"></param>
 <param name="removeEmptyDir"></param>
 <remarks></remarks>
</member>
<member name="T:SDS.CommonUtils.StringUT">
 <summary>
 Funzioni di utilità per stringhe
 </summary>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.StringUT.Truncate(System.String,System.Int32,System.String)">
 <summary>
 Tronca una stringa alla dimensione richiesta aggiungendo eventualmente una stringa terminale (es. ...)
 </summary>
 <param name="input"></param>
 <param name="len"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.StringUT.Truncate(System.String,System.Int32)">
 <summary>
 Tronca una stringa alla dimensione richiesta
 </summary>
 <param name="input"></param>
 <param name="len"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.StringUT.AddWordSpace(System.String,System.Int32)">
 <summary>
 Aggiunge uno spazio all'interno di una parola se piu' lunga di un certo numero di caratteri
 </summary>
 <param name="input"></param>
 <param name="spaceAfter"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.StringUT.CountWords(System.String)">
 <summary>
 Conta le parole all'interno di una stringa
 </summary>
 <param name="input"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.StringUT.GetWords(System.String)">
 <summary>
 Ritorna elenco di parole che compongono una stringa
 </summary>
 <param name="input"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.StringUT.GetEmpty(System.Int32)">
 <summary>
 Ritorna una stringa vuota di lunghezza specificata
 </summary>
 <param name="length"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.StringUT.FillFixedLeft(System.String,System.Int32,System.Char)">
 <summary>
 Ritorna una stringa di dimensione prefissata con eventuale filler a sx fornito. Default filler=spazio
 </summary>
 <param name="input"></param>
 <param name="length"></param>
 <param name="fillChar"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.StringUT.FillFixedRight(System.String,System.Int32,System.Char)">
 <summary>
 Ritorna una stringa di dimensione prefissata con eventuale filler a dx fornito. Default filler=spazio
 </summary>
 <param name="input"></param>
 <param name="length"></param>
 <param name="fillChar"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.StringUT.EliminaAccenti(System.String)">
 <summary>
 Elimina le lettere accentate sopprimendo l'accento all'interno di una parola 
 oppure trasformandolo in apostrofo se a fine parola
 </summary>
 <param name="input"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.StringUT.ToHtmlAscii(System.String)">
 <summary>
 Converte i caratteri extended ascii in codifica html (&amp;#nnn;)
 </summary>
 <param name="input"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.StringUT.XmlNormalize(System.String)">
 <summary>
 Ritorna stringa conforme all'xml 
 </summary>
 <param name="valueIn"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.StringUT.NormalizeAscii(System.String)">
 <summary>
 Normalizza testo ascii:
 - converte i caratteri di servizio (0-31) in spazi
 - converte accentati in standard
 - elimina il resto
 </summary>
 <param name="input"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.StringUT.Reverse(System.String)">
 <summary>
 Ritorna una stringa invertita
 </summary>
 <param name="str"></param>
 <returns></returns>
</member>
<member name="T:SDS.CommonUtils.Web.WebAsyncTaskCiclico">
 <summary>
 Classe per l'esecuzione di task asincroni (thread) in applicazioni Web
 </summary>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.Web.WebAsyncTaskCiclico.Start(System.Int32,System.Object)">
 <summary>
 Avvia il task
 </summary>
 <param name="taskData"></param>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.Web.WebAsyncTaskCiclico.performCyclicTask">
 <summary>
 Esegue task ciclicamente. 
 </summary>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.Web.WebAsyncTaskCiclico.ExecuteUserTask">
 <summary>
 Esecuzione del codice utente. I dati forniti nello Start si trovano nella proprieta' TaskData
 </summary>
 <remarks></remarks>
</member>
<member name="T:SDS.CommonUtils.Web.WebAsyncTaskBase">
 <summary>
 Classe per l'esecuzione di task asincroni (thread) in applicazioni Web
 </summary>
 <remarks></remarks>
</member>
<member name="P:SDS.CommonUtils.Web.WebAsyncTaskBase.TaskData">
 <summary>
 Dati forniti al task
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SDS.CommonUtils.Web.WebAsyncTaskBase.IsRunning">
 <summary>
 Indica se il task e' in esecuzione.
 Da utilizzare nei cicli all'interno di ExecuteUserTask
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.Web.WebAsyncTaskBase.internalStart(System.Object,System.Threading.ThreadStart)">
 <summary>
 Avvia il task
 </summary>
 <param name="taskData"></param>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.Web.WebAsyncTaskBase.Stop(System.Boolean)">
 <summary>
 Ferma esecuzione. (Questo metodo viene chiamato autonomamente da ASP.NET in caso di chiusura dell'applicazione
 </summary>
 <param name="immediate"></param>
 <remarks></remarks>
</member>
<member name="T:SDS.CommonUtils.Web.WebAsyncTaskSemplice">
 <summary>
 Classe per l'esecuzione di task asincroni (thread) in applicazioni Web
 </summary>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.Web.WebAsyncTaskSemplice.Start(System.Object)">
 <summary>
 Avvia il task
 </summary>
 <param name="taskData"></param>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.Web.WebAsyncTaskSemplice.ExecuteUserTask">
 <summary>
 Esecuzione del codice utente. I dati forniti nello Start si trovano nella proprieta' TaskData
 </summary>
 <remarks></remarks>
</member>
<member name="T:SDS.CommonUtils.WebClientEx">
 <summary>
 Web client con proprieta' estese esposte
 </summary>
</member>
<member name="T:SDS.CommonUtils.WebUI">
 <summary>
 Classe statica con funzioni per interfaccia WEB
 </summary>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.WebUI.SvuotaCombo(System.Web.UI.WebControls.DropDownList@,System.String,System.String)">
 <summary>
 Svuota una combo
 </summary>
 <param name="combo"></param>
 <param name="nodoBaseNome">
 Se non fornito nulla imposta -- Seleziona --
 Se vuoto lascia la combo se elemento base
 </param>
 <param name="nodoBaseValore">
 Se non fornito nulla imposta "0"
 </param>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.WebUI.CaricaCombo(System.Web.UI.WebControls.DropDownList@,System.Data.DataTable@,System.String,System.String,System.String,System.String,System.String)">
 <summary>
 Carica una combo con il contenuto di una datatable
 </summary>
 <param name="combo"></param>
 <param name="table"></param>
 <param name="campoText"></param>
 <param name="campoValue"></param>
 <param name="campoToolTip"></param>
 <param name="nodoBaseNome"></param>
 <param name="nodoBaseValore"></param>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.WebUI.ImpostaEnableMenuItem(System.Web.UI.WebControls.MenuItem@,System.Boolean)">
 <summary>
 Imposta property Enabled di un menuitem testando prima che non sia NULL
 </summary>
 <param name="item"></param>
 <param name="value"></param>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.WebUI.GetMenuItemClientPostBack(System.Web.UI.WebControls.Menu,System.Web.UI.WebControls.MenuItem@)">
 <summary>
 Dato un menu ed un suo sottoitem (a qualunque livello) ritorna lo script javascript di esecuzione postback con emulazione click
 </summary>
 <param name="item"></param>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.WebUI.EliminaMenuItem(System.Web.UI.WebControls.MenuItem@)">
 <summary>
 Dato un menuitem lo elimina se non NULL
 </summary>
 <param name="item"></param>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.WebUI.GridViewBind(System.Web.UI.WebControls.GridView,System.Data.DataTable)">
 <summary>
 Esegue il bind di un GridView con una tabella. La peculiarità
 è che viene gestita l'eventuale mancanza di dati
 </summary>
 <param name="gridView"></param>
 <param name="tab"></param>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.WebUI.FindControlRecursive(System.Web.UI.Control,System.String)">
 <summary>
 Cerca un controllo con un certo nome
 </summary>
 <param name="Root"></param>
 <param name="Id"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.WebUI.ToJsObj(System.Web.UI.Control)">
 <summary>
 Dato un controllo ASP, ritorna il corrispondente elemento JavaScript
 </summary>
 <param name="control"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.WebUI.JsText(System.String)">
 <summary>
 Converte i caratteri che potrbbero dar fastidio in una stringa Javascript
 </summary>
 <param name="text"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:SDS.CommonUtils.WebUT">
 <summary>
 Utility varie web
 </summary>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.WebUT.GetSafeArgument``1(System.Object,System.Object,System.Boolean,System.String)">
 <summary>
 Dato un valore in qualunque formato ritorna il tipo fornito effettuando una conversione esplicita
 </summary>
 <typeparam name="T"></typeparam>
 <param name="value"></param>
 <param name="nullvalue"></param>
 <param name="errorMessage"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:SDS.CommonUtils.XmlUtility">
 <summary>
 Funzioni di utility  per XML
 </summary>
 <remarks></remarks>
</member>
<member name="T:SDS.CommonUtils.XmlUtility.Node">
 <summary>
 Utility per tipi XmlNode
 </summary>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.XmlUtility.Node.GetString(System.Xml.XmlNode)">
 <summary>
 Get valore string da nodo. restituisce empty se non presente o vuoto
 </summary>
 <param name="xNode"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.XmlUtility.Node.GetString(System.Xml.XmlNode,System.String)">
 <summary>
 Get valore string da nodo. restituisce "ifNon"e se non presente o vuoto
 </summary>
 <param name="xNode"></param>
 <param name="ifNone"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.XmlUtility.Node.GetDate(System.Xml.XmlNode)">
 <summary>
 Get valore DateTime da nodo. restituisce "DateTime.MinValue" se non presente o vuoto
 </summary>
 <param name="xNode"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.XmlUtility.Node.GetDate(System.Xml.XmlNode,System.DateTime)">
 <summary>
 Get valore DateTime da nodo. restituisce "ifNone" se non presente o vuoto
 </summary>
 <param name="xNode"></param>
 <param name="ifNone"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:SDS.CommonUtils.SafeXmlStringReader">
 <summary>
 Classe per la lettura di Xml con decodifica Uri.UnescapeDataString
 </summary>
 <remarks></remarks>
</member>
<member name="T:SDS.CommonUtils.SafeXmlWrite">
 <summary>
 Classe utility per scrivere xml e contestualmente codificare i contenuti con Uri.EscapeDataString
 </summary>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.SafeXmlWrite.WriteElementString(System.String,System.String,System.Boolean)">
 <summary>
 Versione che scrive il contenuto codificandolo
 </summary>
 <param name="nomeElemento"></param>
 <param name="valore"></param>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.SafeXmlWrite.WriteElementString(System.String,System.String)">
 <summary>
 Scrive il valore codificandolo con Uri.EscapeDataString
 </summary>
 <param name="nomeElemento"></param>
 <param name="valore"></param>
 <remarks></remarks>
</member>
<member name="T:SDS.CommonUtils.Xml">
 <summary>
 Utilità Xml
 </summary>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.Xml.trasformaXML(System.String,System.String)">
 <summary>
 Trasforma un XML attraverso un file XSLT
 </summary>
 <param name="xmlIn"></param>
 <param name="xslFilePath"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.Xml.trasformaXML(System.String,System.IO.Stream)">
 <summary>
 Trasforma un XML attraverso un file XSLT - Attenzione lo Stream deve contenere ANVHE lo stream di eventuali IMPORT o INCLUDE presenti nello stesos file Xslt
 </summary>
 <param name="xmlIn"></param>
 <param name="stream"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.Xml.DatasetFromSafeXml(System.String)">
 <summary>
 Legge un XML decodificandolo con Uri.UnescapeDataString
 </summary>
 <param name="xmlIn"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SDS.CommonUtils.Xml.DatasetFromXml(System.String)">
 <summary>
 Legge XML su dataset
 </summary>
 <param name="xmlIn"></param>
 <returns></returns>
</member>
<member name="T:SDS.CommonUtils.XmlWriteTransactional">
 <summary>
 Classe utility per scrivere xml con un solo oggetto in transazione
 </summary>
 <remarks></remarks>
</member>
<member name="P:SDS.CommonUtils.XmlWriteTransactional.IsInTransaction">
 <summary>
 Indica se e' attiva la gestione transazionale
 </summary>
 <returns></returns>
</member>
<member name="M:SDS.CommonUtils.XmlWriteTransactional.BeginTransaction">
 <summary>
 Avvia transazione
 </summary>
</member>
<member name="M:SDS.CommonUtils.XmlWriteTransactional.CommitTransaction">
 <summary>
 Commit transazione (scrive dati)
 </summary>
</member>
<member name="M:SDS.CommonUtils.XmlWriteTransactional.RollbackTransaction">
 <summary>
 Rollback transazione (scarta dati)
 </summary>
</member>
<member name="M:SDS.CommonUtils.XmlWriteTransactional.transCheck">
 <summary>
 Verifica se transazione attiva
 </summary>
</member>
<member name="M:SDS.CommonUtils.XmlWriteTransactional.transReset">
 <summary>
 Resetta transazione
 </summary>
</member>
<member name="M:SDS.CommonUtils.XmlWriteTransactional.writeBuffer">
 <summary>
 Scrive il buffer
 </summary>
</member>
<member name="M:SDS.CommonUtils.XmlWriteTransactional.GetStringBuilderTransaction">
 <summary>
 Ritorna lo StringBuilder interno utilizzato della Transazione
 </summary>
 <returns></returns>
</member>
<member name="M:SDS.CommonUtils.XmlWriteTransactional.DeleteOutputFile">
 <summary>
 Cancella il file di output e fa il dispose delle strutture interne, il writer NON è più utilizzabile e va creata una nuova istanza
 </summary>
</member>
<member name="M:SDS.CommonUtils.XmlWriteTransactional.Dispose">
 <summary>
 Cancella le strutture interne, il writer NON è più utilizzabile e va creata una nuova istanza
 </summary>
</member>
<member name="T:SDS.CommonUtils.XmlWrite">
 <summary>
 Classe utility per scrivere xml con un solo oggetto
 </summary>
 <remarks></remarks>
</member>
</members>
</doc>
